# Makefile.in generated by automake 1.12.5 from Makefile.am.
# rma/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

MAKE=make

# -*- Mode: Makefile; -*-
# vim: set ft=automake :
#
# (C) 2011 by Argonne National Laboratory.
#     See COPYRIGHT in top-level directory.
#

am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/mpich-testsuite
pkgincludedir = $(includedir)/mpich-testsuite
pkglibdir = $(libdir)/mpich-testsuite
pkglibexecdir = $(libexecdir)/mpich-testsuite
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.mtest $(top_srcdir)/confdb/depcomp
noinst_PROGRAMS = allocmem$(EXEEXT) ircpi$(EXEEXT) test1$(EXEEXT) \
	test2$(EXEEXT) test3$(EXEEXT) test4$(EXEEXT) test5$(EXEEXT) \
	lockcontention$(EXEEXT) lockcontention2$(EXEEXT) \
	lockcontention3$(EXEEXT) lockopts$(EXEEXT) \
	contention_put$(EXEEXT) contention_putget$(EXEEXT) \
	put_base$(EXEEXT) put_bottom$(EXEEXT) locknull$(EXEEXT) \
	wintest$(EXEEXT) transpose1$(EXEEXT) transpose2$(EXEEXT) \
	transpose3$(EXEEXT) transpose4$(EXEEXT) transpose5$(EXEEXT) \
	transpose6$(EXEEXT) transpose7$(EXEEXT) fetchandadd$(EXEEXT) \
	fetchandadd_tree$(EXEEXT) winname$(EXEEXT) putfence1$(EXEEXT) \
	putfidx$(EXEEXT) epochtest$(EXEEXT) getfence1$(EXEEXT) \
	accfence1$(EXEEXT) accfence2$(EXEEXT) adlb_mimic1$(EXEEXT) \
	putpscw1$(EXEEXT) accpscw1$(EXEEXT) getgroup$(EXEEXT) \
	contig_displ$(EXEEXT) test1_am$(EXEEXT) test2_am$(EXEEXT) \
	test3_am$(EXEEXT) test4_am$(EXEEXT) test5_am$(EXEEXT) \
	fetchandadd_am$(EXEEXT) fetchandadd_tree_am$(EXEEXT) \
	accfence2_am$(EXEEXT) test1_dt$(EXEEXT) attrorderwin$(EXEEXT) \
	wincall$(EXEEXT) fkeyvalwin$(EXEEXT) baseattrwin$(EXEEXT) \
	nullpscw$(EXEEXT) rmanull$(EXEEXT) mixedsync$(EXEEXT) \
	manyrma2$(EXEEXT) selfrma$(EXEEXT) \
	strided_acc_onelock$(EXEEXT) strided_putget_indexed$(EXEEXT) \
	strided_putget_indexed_shared$(EXEEXT) \
	strided_acc_indexed$(EXEEXT) strided_acc_subarray$(EXEEXT) \
	strided_get_indexed$(EXEEXT) strided_getacc_indexed$(EXEEXT) \
	strided_getacc_indexed_shared$(EXEEXT) \
	window_creation$(EXEEXT) win_flavors$(EXEEXT) \
	win_shared$(EXEEXT) win_shared_noncontig$(EXEEXT) \
	win_shared_noncontig_put$(EXEEXT) win_dynamic_acc$(EXEEXT) \
	get_acc_local$(EXEEXT) compare_and_swap$(EXEEXT) \
	linked_list$(EXEEXT) linked_list_fop$(EXEEXT) \
	linked_list_lockall$(EXEEXT) fetch_and_op_char$(EXEEXT) \
	fetch_and_op_short$(EXEEXT) fetch_and_op_int$(EXEEXT) \
	fetch_and_op_long$(EXEEXT) fetch_and_op_double$(EXEEXT) \
	fetch_and_op_long_double$(EXEEXT) \
	get_accumulate_short$(EXEEXT) get_accumulate_long$(EXEEXT) \
	get_accumulate_double$(EXEEXT) get_accumulate_int$(EXEEXT) \
	get_accumulate_short_derived$(EXEEXT) \
	get_accumulate_long_derived$(EXEEXT) \
	get_accumulate_double_derived$(EXEEXT) \
	get_accumulate_int_derived$(EXEEXT) flush$(EXEEXT) \
	reqops$(EXEEXT) req_example$(EXEEXT) win_info$(EXEEXT) \
	pscw_ordering$(EXEEXT)
subdir = rma
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/confdb/aclocal_cache.m4 \
	$(top_srcdir)/confdb/aclocal_cc.m4 \
	$(top_srcdir)/confdb/aclocal_cxx.m4 \
	$(top_srcdir)/confdb/aclocal_f77.m4 \
	$(top_srcdir)/confdb/aclocal_fc.m4 \
	$(top_srcdir)/confdb/aclocal_make.m4 \
	$(top_srcdir)/confdb/aclocal_runlog.m4 \
	$(top_srcdir)/confdb/aclocal_util.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/mpitestconf.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
PROGRAMS = $(noinst_PROGRAMS)
accfence1_SOURCES = accfence1.c
accfence1_OBJECTS = accfence1.$(OBJEXT)
accfence1_LDADD = $(LDADD)
accfence1_DEPENDENCIES = $(top_builddir)/util/mtest.o
accfence2_SOURCES = accfence2.c
accfence2_OBJECTS = accfence2.$(OBJEXT)
accfence2_LDADD = $(LDADD)
accfence2_DEPENDENCIES = $(top_builddir)/util/mtest.o
accfence2_am_SOURCES = accfence2_am.c
accfence2_am_OBJECTS = accfence2_am.$(OBJEXT)
accfence2_am_LDADD = $(LDADD)
accfence2_am_DEPENDENCIES = $(top_builddir)/util/mtest.o
accpscw1_SOURCES = accpscw1.c
accpscw1_OBJECTS = accpscw1.$(OBJEXT)
accpscw1_LDADD = $(LDADD)
accpscw1_DEPENDENCIES = $(top_builddir)/util/mtest.o
adlb_mimic1_SOURCES = adlb_mimic1.c
adlb_mimic1_OBJECTS = adlb_mimic1.$(OBJEXT)
adlb_mimic1_LDADD = $(LDADD)
adlb_mimic1_DEPENDENCIES = $(top_builddir)/util/mtest.o
allocmem_SOURCES = allocmem.c
allocmem_OBJECTS = allocmem.$(OBJEXT)
allocmem_LDADD = $(LDADD)
allocmem_DEPENDENCIES = $(top_builddir)/util/mtest.o
attrorderwin_SOURCES = attrorderwin.c
attrorderwin_OBJECTS = attrorderwin.$(OBJEXT)
attrorderwin_LDADD = $(LDADD)
attrorderwin_DEPENDENCIES = $(top_builddir)/util/mtest.o
baseattrwin_SOURCES = baseattrwin.c
baseattrwin_OBJECTS = baseattrwin.$(OBJEXT)
baseattrwin_LDADD = $(LDADD)
baseattrwin_DEPENDENCIES = $(top_builddir)/util/mtest.o
compare_and_swap_SOURCES = compare_and_swap.c
compare_and_swap_OBJECTS = compare_and_swap.$(OBJEXT)
compare_and_swap_LDADD = $(LDADD)
compare_and_swap_DEPENDENCIES = $(top_builddir)/util/mtest.o
contention_put_SOURCES = contention_put.c
contention_put_OBJECTS = contention_put.$(OBJEXT)
contention_put_LDADD = $(LDADD)
contention_put_DEPENDENCIES = $(top_builddir)/util/mtest.o
contention_putget_SOURCES = contention_putget.c
contention_putget_OBJECTS = contention_putget.$(OBJEXT)
contention_putget_LDADD = $(LDADD)
contention_putget_DEPENDENCIES = $(top_builddir)/util/mtest.o
contig_displ_SOURCES = contig_displ.c
contig_displ_OBJECTS = contig_displ.$(OBJEXT)
contig_displ_LDADD = $(LDADD)
contig_displ_DEPENDENCIES = $(top_builddir)/util/mtest.o
epochtest_SOURCES = epochtest.c
epochtest_OBJECTS = epochtest.$(OBJEXT)
epochtest_LDADD = $(LDADD)
epochtest_DEPENDENCIES = $(top_builddir)/util/mtest.o
am_fetch_and_op_char_OBJECTS =  \
	fetch_and_op_char-fetch_and_op.$(OBJEXT)
fetch_and_op_char_OBJECTS = $(am_fetch_and_op_char_OBJECTS)
fetch_and_op_char_LDADD = $(LDADD)
fetch_and_op_char_DEPENDENCIES = $(top_builddir)/util/mtest.o
am_fetch_and_op_double_OBJECTS =  \
	fetch_and_op_double-fetch_and_op.$(OBJEXT)
fetch_and_op_double_OBJECTS = $(am_fetch_and_op_double_OBJECTS)
fetch_and_op_double_LDADD = $(LDADD)
fetch_and_op_double_DEPENDENCIES = $(top_builddir)/util/mtest.o
am_fetch_and_op_int_OBJECTS = fetch_and_op_int-fetch_and_op.$(OBJEXT)
fetch_and_op_int_OBJECTS = $(am_fetch_and_op_int_OBJECTS)
fetch_and_op_int_LDADD = $(LDADD)
fetch_and_op_int_DEPENDENCIES = $(top_builddir)/util/mtest.o
am_fetch_and_op_long_OBJECTS =  \
	fetch_and_op_long-fetch_and_op.$(OBJEXT)
fetch_and_op_long_OBJECTS = $(am_fetch_and_op_long_OBJECTS)
fetch_and_op_long_LDADD = $(LDADD)
fetch_and_op_long_DEPENDENCIES = $(top_builddir)/util/mtest.o
am_fetch_and_op_long_double_OBJECTS =  \
	fetch_and_op_long_double-fetch_and_op.$(OBJEXT)
fetch_and_op_long_double_OBJECTS =  \
	$(am_fetch_and_op_long_double_OBJECTS)
fetch_and_op_long_double_LDADD = $(LDADD)
fetch_and_op_long_double_DEPENDENCIES = $(top_builddir)/util/mtest.o
am_fetch_and_op_short_OBJECTS =  \
	fetch_and_op_short-fetch_and_op.$(OBJEXT)
fetch_and_op_short_OBJECTS = $(am_fetch_and_op_short_OBJECTS)
fetch_and_op_short_LDADD = $(LDADD)
fetch_and_op_short_DEPENDENCIES = $(top_builddir)/util/mtest.o
fetchandadd_SOURCES = fetchandadd.c
fetchandadd_OBJECTS = fetchandadd.$(OBJEXT)
fetchandadd_LDADD = $(LDADD)
fetchandadd_DEPENDENCIES = $(top_builddir)/util/mtest.o
fetchandadd_am_SOURCES = fetchandadd_am.c
fetchandadd_am_OBJECTS = fetchandadd_am.$(OBJEXT)
fetchandadd_am_LDADD = $(LDADD)
fetchandadd_am_DEPENDENCIES = $(top_builddir)/util/mtest.o
fetchandadd_tree_SOURCES = fetchandadd_tree.c
fetchandadd_tree_OBJECTS = fetchandadd_tree.$(OBJEXT)
fetchandadd_tree_LDADD = $(LDADD)
fetchandadd_tree_DEPENDENCIES = $(top_builddir)/util/mtest.o
fetchandadd_tree_am_SOURCES = fetchandadd_tree_am.c
fetchandadd_tree_am_OBJECTS = fetchandadd_tree_am.$(OBJEXT)
fetchandadd_tree_am_LDADD = $(LDADD)
fetchandadd_tree_am_DEPENDENCIES = $(top_builddir)/util/mtest.o
fkeyvalwin_SOURCES = fkeyvalwin.c
fkeyvalwin_OBJECTS = fkeyvalwin.$(OBJEXT)
fkeyvalwin_LDADD = $(LDADD)
fkeyvalwin_DEPENDENCIES = $(top_builddir)/util/mtest.o
flush_SOURCES = flush.c
flush_OBJECTS = flush.$(OBJEXT)
flush_LDADD = $(LDADD)
flush_DEPENDENCIES = $(top_builddir)/util/mtest.o
get_acc_local_SOURCES = get_acc_local.c
get_acc_local_OBJECTS = get_acc_local.$(OBJEXT)
get_acc_local_LDADD = $(LDADD)
get_acc_local_DEPENDENCIES = $(top_builddir)/util/mtest.o
am_get_accumulate_double_OBJECTS =  \
	get_accumulate_double-get_accumulate.$(OBJEXT)
get_accumulate_double_OBJECTS = $(am_get_accumulate_double_OBJECTS)
get_accumulate_double_LDADD = $(LDADD)
get_accumulate_double_DEPENDENCIES = $(top_builddir)/util/mtest.o
am_get_accumulate_double_derived_OBJECTS =  \
	get_accumulate_double_derived-get_accumulate.$(OBJEXT)
get_accumulate_double_derived_OBJECTS =  \
	$(am_get_accumulate_double_derived_OBJECTS)
get_accumulate_double_derived_LDADD = $(LDADD)
get_accumulate_double_derived_DEPENDENCIES =  \
	$(top_builddir)/util/mtest.o
am_get_accumulate_int_OBJECTS =  \
	get_accumulate_int-get_accumulate.$(OBJEXT)
get_accumulate_int_OBJECTS = $(am_get_accumulate_int_OBJECTS)
get_accumulate_int_LDADD = $(LDADD)
get_accumulate_int_DEPENDENCIES = $(top_builddir)/util/mtest.o
am_get_accumulate_int_derived_OBJECTS =  \
	get_accumulate_int_derived-get_accumulate.$(OBJEXT)
get_accumulate_int_derived_OBJECTS =  \
	$(am_get_accumulate_int_derived_OBJECTS)
get_accumulate_int_derived_LDADD = $(LDADD)
get_accumulate_int_derived_DEPENDENCIES =  \
	$(top_builddir)/util/mtest.o
am_get_accumulate_long_OBJECTS =  \
	get_accumulate_long-get_accumulate.$(OBJEXT)
get_accumulate_long_OBJECTS = $(am_get_accumulate_long_OBJECTS)
get_accumulate_long_LDADD = $(LDADD)
get_accumulate_long_DEPENDENCIES = $(top_builddir)/util/mtest.o
am_get_accumulate_long_derived_OBJECTS =  \
	get_accumulate_long_derived-get_accumulate.$(OBJEXT)
get_accumulate_long_derived_OBJECTS =  \
	$(am_get_accumulate_long_derived_OBJECTS)
get_accumulate_long_derived_LDADD = $(LDADD)
get_accumulate_long_derived_DEPENDENCIES =  \
	$(top_builddir)/util/mtest.o
am_get_accumulate_short_OBJECTS =  \
	get_accumulate_short-get_accumulate.$(OBJEXT)
get_accumulate_short_OBJECTS = $(am_get_accumulate_short_OBJECTS)
get_accumulate_short_LDADD = $(LDADD)
get_accumulate_short_DEPENDENCIES = $(top_builddir)/util/mtest.o
am_get_accumulate_short_derived_OBJECTS =  \
	get_accumulate_short_derived-get_accumulate.$(OBJEXT)
get_accumulate_short_derived_OBJECTS =  \
	$(am_get_accumulate_short_derived_OBJECTS)
get_accumulate_short_derived_LDADD = $(LDADD)
get_accumulate_short_derived_DEPENDENCIES =  \
	$(top_builddir)/util/mtest.o
getfence1_SOURCES = getfence1.c
getfence1_OBJECTS = getfence1.$(OBJEXT)
getfence1_LDADD = $(LDADD)
getfence1_DEPENDENCIES = $(top_builddir)/util/mtest.o
getgroup_SOURCES = getgroup.c
getgroup_OBJECTS = getgroup.$(OBJEXT)
getgroup_LDADD = $(LDADD)
getgroup_DEPENDENCIES = $(top_builddir)/util/mtest.o
ircpi_SOURCES = ircpi.c
ircpi_OBJECTS = ircpi.$(OBJEXT)
ircpi_LDADD = $(LDADD)
ircpi_DEPENDENCIES = $(top_builddir)/util/mtest.o
linked_list_SOURCES = linked_list.c
linked_list_OBJECTS = linked_list.$(OBJEXT)
linked_list_LDADD = $(LDADD)
linked_list_DEPENDENCIES = $(top_builddir)/util/mtest.o
linked_list_fop_SOURCES = linked_list_fop.c
linked_list_fop_OBJECTS = linked_list_fop.$(OBJEXT)
linked_list_fop_LDADD = $(LDADD)
linked_list_fop_DEPENDENCIES = $(top_builddir)/util/mtest.o
linked_list_lockall_SOURCES = linked_list_lockall.c
linked_list_lockall_OBJECTS = linked_list_lockall.$(OBJEXT)
linked_list_lockall_LDADD = $(LDADD)
linked_list_lockall_DEPENDENCIES = $(top_builddir)/util/mtest.o
lockcontention_SOURCES = lockcontention.c
lockcontention_OBJECTS = lockcontention.$(OBJEXT)
lockcontention_LDADD = $(LDADD)
lockcontention_DEPENDENCIES = $(top_builddir)/util/mtest.o
lockcontention2_SOURCES = lockcontention2.c
lockcontention2_OBJECTS = lockcontention2.$(OBJEXT)
lockcontention2_LDADD = $(LDADD)
lockcontention2_DEPENDENCIES = $(top_builddir)/util/mtest.o
lockcontention3_SOURCES = lockcontention3.c
lockcontention3_OBJECTS = lockcontention3.$(OBJEXT)
lockcontention3_LDADD = $(LDADD)
lockcontention3_DEPENDENCIES = $(top_builddir)/util/mtest.o
locknull_SOURCES = locknull.c
locknull_OBJECTS = locknull.$(OBJEXT)
locknull_LDADD = $(LDADD)
locknull_DEPENDENCIES = $(top_builddir)/util/mtest.o
lockopts_SOURCES = lockopts.c
lockopts_OBJECTS = lockopts.$(OBJEXT)
lockopts_LDADD = $(LDADD)
lockopts_DEPENDENCIES = $(top_builddir)/util/mtest.o
manyrma2_SOURCES = manyrma2.c
manyrma2_OBJECTS = manyrma2.$(OBJEXT)
manyrma2_LDADD = $(LDADD)
manyrma2_DEPENDENCIES = $(top_builddir)/util/mtest.o
mixedsync_SOURCES = mixedsync.c
mixedsync_OBJECTS = mixedsync.$(OBJEXT)
mixedsync_LDADD = $(LDADD)
mixedsync_DEPENDENCIES = $(top_builddir)/util/mtest.o
nullpscw_SOURCES = nullpscw.c
nullpscw_OBJECTS = nullpscw.$(OBJEXT)
nullpscw_LDADD = $(LDADD)
nullpscw_DEPENDENCIES = $(top_builddir)/util/mtest.o
pscw_ordering_SOURCES = pscw_ordering.c
pscw_ordering_OBJECTS = pscw_ordering.$(OBJEXT)
pscw_ordering_LDADD = $(LDADD)
pscw_ordering_DEPENDENCIES = $(top_builddir)/util/mtest.o
put_base_SOURCES = put_base.c
put_base_OBJECTS = put_base.$(OBJEXT)
put_base_LDADD = $(LDADD)
put_base_DEPENDENCIES = $(top_builddir)/util/mtest.o
put_bottom_SOURCES = put_bottom.c
put_bottom_OBJECTS = put_bottom.$(OBJEXT)
put_bottom_LDADD = $(LDADD)
put_bottom_DEPENDENCIES = $(top_builddir)/util/mtest.o
putfence1_SOURCES = putfence1.c
putfence1_OBJECTS = putfence1.$(OBJEXT)
putfence1_LDADD = $(LDADD)
putfence1_DEPENDENCIES = $(top_builddir)/util/mtest.o
putfidx_SOURCES = putfidx.c
putfidx_OBJECTS = putfidx.$(OBJEXT)
putfidx_LDADD = $(LDADD)
putfidx_DEPENDENCIES = $(top_builddir)/util/mtest.o
putpscw1_SOURCES = putpscw1.c
putpscw1_OBJECTS = putpscw1.$(OBJEXT)
putpscw1_LDADD = $(LDADD)
putpscw1_DEPENDENCIES = $(top_builddir)/util/mtest.o
req_example_SOURCES = req_example.c
req_example_OBJECTS = req_example.$(OBJEXT)
req_example_LDADD = $(LDADD)
req_example_DEPENDENCIES = $(top_builddir)/util/mtest.o
reqops_SOURCES = reqops.c
reqops_OBJECTS = reqops.$(OBJEXT)
reqops_LDADD = $(LDADD)
reqops_DEPENDENCIES = $(top_builddir)/util/mtest.o
rmanull_SOURCES = rmanull.c
rmanull_OBJECTS = rmanull.$(OBJEXT)
rmanull_LDADD = $(LDADD)
rmanull_DEPENDENCIES = $(top_builddir)/util/mtest.o
selfrma_SOURCES = selfrma.c
selfrma_OBJECTS = selfrma.$(OBJEXT)
selfrma_LDADD = $(LDADD)
selfrma_DEPENDENCIES = $(top_builddir)/util/mtest.o
strided_acc_indexed_SOURCES = strided_acc_indexed.c
strided_acc_indexed_OBJECTS = strided_acc_indexed.$(OBJEXT)
strided_acc_indexed_DEPENDENCIES = $(LDADD)
strided_acc_onelock_SOURCES = strided_acc_onelock.c
strided_acc_onelock_OBJECTS = strided_acc_onelock.$(OBJEXT)
strided_acc_onelock_DEPENDENCIES = $(LDADD)
strided_acc_subarray_SOURCES = strided_acc_subarray.c
strided_acc_subarray_OBJECTS = strided_acc_subarray.$(OBJEXT)
strided_acc_subarray_DEPENDENCIES = $(LDADD)
strided_get_indexed_SOURCES = strided_get_indexed.c
strided_get_indexed_OBJECTS = strided_get_indexed.$(OBJEXT)
strided_get_indexed_DEPENDENCIES = $(LDADD)
strided_getacc_indexed_SOURCES = strided_getacc_indexed.c
strided_getacc_indexed_OBJECTS = strided_getacc_indexed.$(OBJEXT)
strided_getacc_indexed_DEPENDENCIES = $(LDADD)
strided_getacc_indexed_shared_SOURCES =  \
	strided_getacc_indexed_shared.c
strided_getacc_indexed_shared_OBJECTS =  \
	strided_getacc_indexed_shared.$(OBJEXT)
strided_getacc_indexed_shared_DEPENDENCIES = $(LDADD)
strided_putget_indexed_SOURCES = strided_putget_indexed.c
strided_putget_indexed_OBJECTS = strided_putget_indexed.$(OBJEXT)
strided_putget_indexed_DEPENDENCIES = $(LDADD)
strided_putget_indexed_shared_SOURCES =  \
	strided_putget_indexed_shared.c
strided_putget_indexed_shared_OBJECTS =  \
	strided_putget_indexed_shared.$(OBJEXT)
strided_putget_indexed_shared_DEPENDENCIES = $(LDADD)
test1_SOURCES = test1.c
test1_OBJECTS = test1.$(OBJEXT)
test1_LDADD = $(LDADD)
test1_DEPENDENCIES = $(top_builddir)/util/mtest.o
test1_am_SOURCES = test1_am.c
test1_am_OBJECTS = test1_am.$(OBJEXT)
test1_am_LDADD = $(LDADD)
test1_am_DEPENDENCIES = $(top_builddir)/util/mtest.o
test1_dt_SOURCES = test1_dt.c
test1_dt_OBJECTS = test1_dt.$(OBJEXT)
test1_dt_LDADD = $(LDADD)
test1_dt_DEPENDENCIES = $(top_builddir)/util/mtest.o
test2_SOURCES = test2.c
test2_OBJECTS = test2.$(OBJEXT)
test2_LDADD = $(LDADD)
test2_DEPENDENCIES = $(top_builddir)/util/mtest.o
test2_am_SOURCES = test2_am.c
test2_am_OBJECTS = test2_am.$(OBJEXT)
test2_am_LDADD = $(LDADD)
test2_am_DEPENDENCIES = $(top_builddir)/util/mtest.o
test3_SOURCES = test3.c
test3_OBJECTS = test3.$(OBJEXT)
test3_LDADD = $(LDADD)
test3_DEPENDENCIES = $(top_builddir)/util/mtest.o
test3_am_SOURCES = test3_am.c
test3_am_OBJECTS = test3_am.$(OBJEXT)
test3_am_LDADD = $(LDADD)
test3_am_DEPENDENCIES = $(top_builddir)/util/mtest.o
test4_SOURCES = test4.c
test4_OBJECTS = test4.$(OBJEXT)
test4_LDADD = $(LDADD)
test4_DEPENDENCIES = $(top_builddir)/util/mtest.o
test4_am_SOURCES = test4_am.c
test4_am_OBJECTS = test4_am.$(OBJEXT)
test4_am_LDADD = $(LDADD)
test4_am_DEPENDENCIES = $(top_builddir)/util/mtest.o
test5_SOURCES = test5.c
test5_OBJECTS = test5.$(OBJEXT)
test5_LDADD = $(LDADD)
test5_DEPENDENCIES = $(top_builddir)/util/mtest.o
test5_am_SOURCES = test5_am.c
test5_am_OBJECTS = test5_am.$(OBJEXT)
test5_am_LDADD = $(LDADD)
test5_am_DEPENDENCIES = $(top_builddir)/util/mtest.o
transpose1_SOURCES = transpose1.c
transpose1_OBJECTS = transpose1.$(OBJEXT)
transpose1_LDADD = $(LDADD)
transpose1_DEPENDENCIES = $(top_builddir)/util/mtest.o
transpose2_SOURCES = transpose2.c
transpose2_OBJECTS = transpose2.$(OBJEXT)
transpose2_LDADD = $(LDADD)
transpose2_DEPENDENCIES = $(top_builddir)/util/mtest.o
transpose3_SOURCES = transpose3.c
transpose3_OBJECTS = transpose3.$(OBJEXT)
transpose3_LDADD = $(LDADD)
transpose3_DEPENDENCIES = $(top_builddir)/util/mtest.o
transpose4_SOURCES = transpose4.c
transpose4_OBJECTS = transpose4.$(OBJEXT)
transpose4_LDADD = $(LDADD)
transpose4_DEPENDENCIES = $(top_builddir)/util/mtest.o
transpose5_SOURCES = transpose5.c
transpose5_OBJECTS = transpose5.$(OBJEXT)
transpose5_LDADD = $(LDADD)
transpose5_DEPENDENCIES = $(top_builddir)/util/mtest.o
transpose6_SOURCES = transpose6.c
transpose6_OBJECTS = transpose6.$(OBJEXT)
transpose6_LDADD = $(LDADD)
transpose6_DEPENDENCIES = $(top_builddir)/util/mtest.o
transpose7_SOURCES = transpose7.c
transpose7_OBJECTS = transpose7.$(OBJEXT)
transpose7_LDADD = $(LDADD)
transpose7_DEPENDENCIES = $(top_builddir)/util/mtest.o
win_dynamic_acc_SOURCES = win_dynamic_acc.c
win_dynamic_acc_OBJECTS = win_dynamic_acc.$(OBJEXT)
win_dynamic_acc_LDADD = $(LDADD)
win_dynamic_acc_DEPENDENCIES = $(top_builddir)/util/mtest.o
win_flavors_SOURCES = win_flavors.c
win_flavors_OBJECTS = win_flavors.$(OBJEXT)
win_flavors_LDADD = $(LDADD)
win_flavors_DEPENDENCIES = $(top_builddir)/util/mtest.o
win_info_SOURCES = win_info.c
win_info_OBJECTS = win_info.$(OBJEXT)
win_info_LDADD = $(LDADD)
win_info_DEPENDENCIES = $(top_builddir)/util/mtest.o
win_shared_SOURCES = win_shared.c
win_shared_OBJECTS = win_shared.$(OBJEXT)
win_shared_LDADD = $(LDADD)
win_shared_DEPENDENCIES = $(top_builddir)/util/mtest.o
win_shared_noncontig_SOURCES = win_shared_noncontig.c
win_shared_noncontig_OBJECTS = win_shared_noncontig.$(OBJEXT)
win_shared_noncontig_LDADD = $(LDADD)
win_shared_noncontig_DEPENDENCIES = $(top_builddir)/util/mtest.o
win_shared_noncontig_put_SOURCES = win_shared_noncontig_put.c
win_shared_noncontig_put_OBJECTS = win_shared_noncontig_put.$(OBJEXT)
win_shared_noncontig_put_LDADD = $(LDADD)
win_shared_noncontig_put_DEPENDENCIES = $(top_builddir)/util/mtest.o
wincall_SOURCES = wincall.c
wincall_OBJECTS = wincall.$(OBJEXT)
wincall_LDADD = $(LDADD)
wincall_DEPENDENCIES = $(top_builddir)/util/mtest.o
window_creation_SOURCES = window_creation.c
window_creation_OBJECTS = window_creation.$(OBJEXT)
window_creation_LDADD = $(LDADD)
window_creation_DEPENDENCIES = $(top_builddir)/util/mtest.o
winname_SOURCES = winname.c
winname_OBJECTS = winname.$(OBJEXT)
winname_LDADD = $(LDADD)
winname_DEPENDENCIES = $(top_builddir)/util/mtest.o
wintest_SOURCES = wintest.c
wintest_OBJECTS = wintest.$(OBJEXT)
wintest_LDADD = $(LDADD)
wintest_DEPENDENCIES = $(top_builddir)/util/mtest.o
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/confdb/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = accfence1.c accfence2.c accfence2_am.c accpscw1.c \
	adlb_mimic1.c allocmem.c attrorderwin.c baseattrwin.c \
	compare_and_swap.c contention_put.c contention_putget.c \
	contig_displ.c epochtest.c $(fetch_and_op_char_SOURCES) \
	$(fetch_and_op_double_SOURCES) $(fetch_and_op_int_SOURCES) \
	$(fetch_and_op_long_SOURCES) \
	$(fetch_and_op_long_double_SOURCES) \
	$(fetch_and_op_short_SOURCES) fetchandadd.c fetchandadd_am.c \
	fetchandadd_tree.c fetchandadd_tree_am.c fkeyvalwin.c flush.c \
	get_acc_local.c $(get_accumulate_double_SOURCES) \
	$(get_accumulate_double_derived_SOURCES) \
	$(get_accumulate_int_SOURCES) \
	$(get_accumulate_int_derived_SOURCES) \
	$(get_accumulate_long_SOURCES) \
	$(get_accumulate_long_derived_SOURCES) \
	$(get_accumulate_short_SOURCES) \
	$(get_accumulate_short_derived_SOURCES) getfence1.c getgroup.c \
	ircpi.c linked_list.c linked_list_fop.c linked_list_lockall.c \
	lockcontention.c lockcontention2.c lockcontention3.c \
	locknull.c lockopts.c manyrma2.c mixedsync.c nullpscw.c \
	pscw_ordering.c put_base.c put_bottom.c putfence1.c putfidx.c \
	putpscw1.c req_example.c reqops.c rmanull.c selfrma.c \
	strided_acc_indexed.c strided_acc_onelock.c \
	strided_acc_subarray.c strided_get_indexed.c \
	strided_getacc_indexed.c strided_getacc_indexed_shared.c \
	strided_putget_indexed.c strided_putget_indexed_shared.c \
	test1.c test1_am.c test1_dt.c test2.c test2_am.c test3.c \
	test3_am.c test4.c test4_am.c test5.c test5_am.c transpose1.c \
	transpose2.c transpose3.c transpose4.c transpose5.c \
	transpose6.c transpose7.c win_dynamic_acc.c win_flavors.c \
	win_info.c win_shared.c win_shared_noncontig.c \
	win_shared_noncontig_put.c wincall.c window_creation.c \
	winname.c wintest.c
DIST_SOURCES = accfence1.c accfence2.c accfence2_am.c accpscw1.c \
	adlb_mimic1.c allocmem.c attrorderwin.c baseattrwin.c \
	compare_and_swap.c contention_put.c contention_putget.c \
	contig_displ.c epochtest.c $(fetch_and_op_char_SOURCES) \
	$(fetch_and_op_double_SOURCES) $(fetch_and_op_int_SOURCES) \
	$(fetch_and_op_long_SOURCES) \
	$(fetch_and_op_long_double_SOURCES) \
	$(fetch_and_op_short_SOURCES) fetchandadd.c fetchandadd_am.c \
	fetchandadd_tree.c fetchandadd_tree_am.c fkeyvalwin.c flush.c \
	get_acc_local.c $(get_accumulate_double_SOURCES) \
	$(get_accumulate_double_derived_SOURCES) \
	$(get_accumulate_int_SOURCES) \
	$(get_accumulate_int_derived_SOURCES) \
	$(get_accumulate_long_SOURCES) \
	$(get_accumulate_long_derived_SOURCES) \
	$(get_accumulate_short_SOURCES) \
	$(get_accumulate_short_derived_SOURCES) getfence1.c getgroup.c \
	ircpi.c linked_list.c linked_list_fop.c linked_list_lockall.c \
	lockcontention.c lockcontention2.c lockcontention3.c \
	locknull.c lockopts.c manyrma2.c mixedsync.c nullpscw.c \
	pscw_ordering.c put_base.c put_bottom.c putfence1.c putfidx.c \
	putpscw1.c req_example.c reqops.c rmanull.c selfrma.c \
	strided_acc_indexed.c strided_acc_onelock.c \
	strided_acc_subarray.c strided_get_indexed.c \
	strided_getacc_indexed.c strided_getacc_indexed_shared.c \
	strided_putget_indexed.c strided_putget_indexed_shared.c \
	test1.c test1_am.c test1_dt.c test2.c test2_am.c test3.c \
	test3_am.c test4.c test4_am.c test5.c test5_am.c transpose1.c \
	transpose2.c transpose3.c transpose4.c transpose5.c \
	transpose6.c transpose7.c win_dynamic_acc.c win_flavors.c \
	win_info.c win_shared.c win_shared_noncontig.c \
	win_shared_noncontig_put.c wincall.c window_creation.c \
	winname.c wintest.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
VPATH = VPATH=.:${srcdir}
ACLOCAL = ${SHELL} /home/metman/git-projects/WRF_Libraries/src/mpich-3.0.1/test/mpi/confdb/missing --run aclocal-1.12
ALLOCMEMF = allocmemf 1
ALLOCMEMFC = allocmemf90 1
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/metman/git-projects/WRF_Libraries/src/mpich-3.0.1/test/mpi/confdb/missing --run autoconf
AUTOHEADER = ${SHELL} /home/metman/git-projects/WRF_Libraries/src/mpich-3.0.1/test/mpi/confdb/missing --run autoheader
AUTOMAKE = ${SHELL} /home/metman/git-projects/WRF_Libraries/src/mpich-3.0.1/test/mpi/confdb/missing --run automake-1.12
AWK = gawk
CC = /home/metman/git-projects/WRF_Libraries/opt/ifort/nc4/../mpich_ifort/bin/mpicc
CCDEPMODE = depmode=gcc3
CFLAGS = 
CPP = icc -E
CPPFLAGS = 
CXX = /home/metman/git-projects/WRF_Libraries/opt/ifort/nc4/../mpich_ifort/bin/mpicxx
CXXCPP = 
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F03SPAWNARGTEST = 
F77 = /home/metman/git-projects/WRF_Libraries/opt/ifort/nc4/../mpich_ifort/bin/mpif77
F77SPAWNARGTEST = 
F77_GETARG_LIBS = 
F77_MPI_ADDRESS = integer*8
F77_MPI_OFFSET = integer*8
F77_NAME_MANGLE = F77_NAME_LOWER_USCORE
FC = /home/metman/git-projects/WRF_Libraries/opt/ifort/nc4/../mpich_ifort/bin/mpif90
FCFLAGS = 
FCFLAGS_f90 = 
FCMODEXT = mod
FCMODINCFLAG = -I
FCMODOUTFLAG = -module 
FC_GETARG_LIBS = 
FC_WORK_FILES_ARG = 
FFLAGS = 
FGREP = /bin/grep -F
FLIBS =  -L/opt/intel/composer_xe_2013_sp1.0.080/compiler/lib/intel64 -L/opt/intel/composer_xe_2013_sp1.0.080/ipp/../compiler/lib/intel64 -L/opt/intel/composer_xe_2013_sp1.0.080/ipp/lib/intel64 -L/opt/intel/composer_xe_2013_sp1.0.080/mkl/lib/intel64 -L/opt/intel/composer_xe_2013_sp1.0.080/tbb/lib/intel64/gcc4.4 -L/usr/lib/gcc/x86_64-linux-gnu/4.8/ -L/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../x86_64-linux-gnu/ -L/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../lib/ -L/lib/x86_64-linux-gnu/ -L/lib/../lib64 -L/lib/../lib/ -L/usr/lib/x86_64-linux-gnu/ -L/usr/lib/../lib/ -L/opt/intel/composer_xe_2013_sp1.0.080/compiler/lib/intel64/ -L/opt/intel/composer_xe_2013_sp1.0.080/ipp/../compiler/lib/intel64/ -L/opt/intel/composer_xe_2013_sp1.0.080/ipp/lib/intel64/ -L/opt/intel/composer_xe_2013_sp1.0.080/mkl/lib/intel64/ -L/opt/intel/composer_xe_2013_sp1.0.080/tbb/lib/intel64/gcc4.4/ -L/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../ -L/lib64 -L/lib/ -L/usr/lib -L/usr/lib/i386-linux-gnu -lpthread -lifport -lifcore -limf -lsvml -lm -lipgo -lirc -lirc_s -ldl
FROM_MPICH = yes
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAINT = 
MAKE = make
MAKEINFO = ${SHELL} /home/metman/git-projects/WRF_Libraries/src/mpich-3.0.1/test/mpi/confdb/missing --run makeinfo
MKDIR_P = mkdir -p
MPICC = 
MPICH_ENABLE_CXX = yes
MPICH_ENABLE_F77 = yes
MPICH_ENABLE_FC = yes
MPICH_THREAD_LEVEL = MPI_THREAD_MULTIPLE
MPICXX = 
MPIEXEC = /home/metman/git-projects/WRF_Libraries/opt/ifort/nc4/../mpich_ifort/bin/mpiexec
MPIF77 = 
MPIFC = 
MPILIBLOC = 
MPILIBNAME = mpich
MPI_HAS_MPIX = yes
MPI_IS_STRICT = false
MPI_NO_RMA = 
MPI_NO_SPAWN = 
MPI_SIZEOF_AINT = 8
MPI_SIZEOF_OFFSET = 8
MPI_SOURCE = 
MPI_SUBVERSION = 0
MPI_VERSION = 3
OBJEXT = o
PACKAGE = mpich-testsuite
PACKAGE_BUGREPORT = 
PACKAGE_NAME = mpich-testsuite
PACKAGE_STRING = mpich-testsuite 1.2
PACKAGE_TARNAME = mpich-testsuite
PACKAGE_URL = 
PACKAGE_VERSION = 1.2
PATH_SEPARATOR = :
PERL = /usr/bin/perl
RANLIB = ranlib
SET_CFLAGS = CFLAGS=
SET_MAKE = MAKE=make
SHELL = /bin/sh
STRIP = 
VERSION = 1.2
WRAPPER_CFLAGS = -fpic -mcmodel=medium 
WRAPPER_CPPFLAGS =  
WRAPPER_CXXFLAGS =  
WRAPPER_FCFLAGS = -fpic -mcmodel=medium 
WRAPPER_FFLAGS =  
WRAPPER_LDFLAGS =   
WRAPPER_LIBS = -lopa -lmpl  -lrt -lpthread  
abs_builddir = /home/metman/git-projects/WRF_Libraries/src/mpich-3.0.1/test/mpi/rma
abs_srcdir = /home/metman/git-projects/WRF_Libraries/src/mpich-3.0.1/test/mpi/rma
abs_top_builddir = /home/metman/git-projects/WRF_Libraries/src/mpich-3.0.1/test/mpi
abs_top_srcdir = /home/metman/git-projects/WRF_Libraries/src/mpich-3.0.1/test/mpi
ac_ct_AR = 
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_F77 = 
ac_ct_FC = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
cxxdir = cxx
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
errordir = errors
exec_prefix = ${prefix}
f77dir = f77
f90dir = f90
faultsdir = #
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/metman/git-projects/WRF_Libraries/src/mpich-3.0.1/test/mpi/confdb/install-sh
iodir = io
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
master_top_builddir = /home/metman/git-projects/WRF_Libraries/src/mpich-3.0.1
master_top_srcdir = /home/metman/git-projects/WRF_Libraries/src/mpich-3.0.1
mkdir_p = $(MKDIR_P)
mpich_top_srcdir = /home/metman/git-projects/WRF_Libraries/src/mpich-3.0.1
oldincludedir = /usr/include
otherlangs =  f77 f90 cxx
pdfdir = ${docdir}
perfdir = perf
prefix = /home/metman/git-projects/WRF_Libraries/opt/ifort/nc4/../mpich_ifort
program_transform_name = s,x,x,
psdir = ${docdir}
rmadir = rma
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
spawndir = spawn
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
threadsdir = threads
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

# AM_CPPFLAGS are used for C++ code as well
AM_CPPFLAGS = -I$(top_builddir)/include -I$(top_srcdir)/include
LDADD = $(top_builddir)/util/mtest.o
CLEANFILES = summary.xml
EXTRA_DIST = testlist
strided_acc_indexed_LDADD = $(LDADD) -lm
strided_acc_onelock_LDADD = $(LDADD) -lm
strided_acc_subarray_LDADD = $(LDADD) -lm
strided_get_indexed_LDADD = $(LDADD) -lm
strided_getacc_indexed_LDADD = $(LDADD) -lm
strided_putget_indexed_LDADD = $(LDADD) -lm
strided_getacc_indexed_shared_LDADD = $(LDADD) -lm
strided_putget_indexed_shared_LDADD = $(LDADD) -lm
fetch_and_op_char_CPPFLAGS = -DFOP_TYPE_CHAR $(AM_CPPFLAGS)
fetch_and_op_short_CPPFLAGS = -DFOP_TYPE_SHORT $(AM_CPPFLAGS)
fetch_and_op_int_CPPFLAGS = -DFOP_TYPE_INT $(AM_CPPFLAGS)
fetch_and_op_long_CPPFLAGS = -DFOP_TYPE_LONG $(AM_CPPFLAGS)
fetch_and_op_double_CPPFLAGS = -DFOP_TYPE_DOUBLE $(AM_CPPFLAGS)
fetch_and_op_long_double_CPPFLAGS = -DFOP_TYPE_LONG_DOUBLE $(AM_CPPFLAGS)
fetch_and_op_char_SOURCES = fetch_and_op.c
fetch_and_op_short_SOURCES = fetch_and_op.c
fetch_and_op_int_SOURCES = fetch_and_op.c
fetch_and_op_long_SOURCES = fetch_and_op.c
fetch_and_op_double_SOURCES = fetch_and_op.c
fetch_and_op_long_double_SOURCES = fetch_and_op.c
get_accumulate_short_CPPFLAGS = -DGACC_TYPE_SHORT $(AM_CPPFLAGS)
get_accumulate_long_CPPFLAGS = -DGACC_TYPE_LONG $(AM_CPPFLAGS)
get_accumulate_double_CPPFLAGS = -DGACC_TYPE_DOUBLE $(AM_CPPFLAGS)
get_accumulate_int_CPPFLAGS = -DGACC_TYPE_INT $(AM_CPPFLAGS)
get_accumulate_short_derived_CPPFLAGS = -DGACC_TYPE_SHORT -DGACC_TYPE_DERIVED $(AM_CPPFLAGS)
get_accumulate_long_derived_CPPFLAGS = -DGACC_TYPE_LONG -DGACC_TYPE_DERIVED $(AM_CPPFLAGS)
get_accumulate_double_derived_CPPFLAGS = -DGACC_TYPE_DOUBLE -DGACC_TYPE_DERIVED $(AM_CPPFLAGS)
get_accumulate_int_derived_CPPFLAGS = -DGACC_TYPE_INT -DGACC_TYPE_DERIVED $(AM_CPPFLAGS)
get_accumulate_short_SOURCES = get_accumulate.c
get_accumulate_long_SOURCES = get_accumulate.c
get_accumulate_double_SOURCES = get_accumulate.c
get_accumulate_int_SOURCES = get_accumulate.c
get_accumulate_short_derived_SOURCES = get_accumulate.c
get_accumulate_long_derived_SOURCES = get_accumulate.c
get_accumulate_double_derived_SOURCES = get_accumulate.c
get_accumulate_int_derived_SOURCES = get_accumulate.c
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.mtest $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign rma/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign rma/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.mtest:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
accfence1$(EXEEXT): $(accfence1_OBJECTS) $(accfence1_DEPENDENCIES) $(EXTRA_accfence1_DEPENDENCIES) 
	@rm -f accfence1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(accfence1_OBJECTS) $(accfence1_LDADD) $(LIBS)
accfence2$(EXEEXT): $(accfence2_OBJECTS) $(accfence2_DEPENDENCIES) $(EXTRA_accfence2_DEPENDENCIES) 
	@rm -f accfence2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(accfence2_OBJECTS) $(accfence2_LDADD) $(LIBS)
accfence2_am$(EXEEXT): $(accfence2_am_OBJECTS) $(accfence2_am_DEPENDENCIES) $(EXTRA_accfence2_am_DEPENDENCIES) 
	@rm -f accfence2_am$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(accfence2_am_OBJECTS) $(accfence2_am_LDADD) $(LIBS)
accpscw1$(EXEEXT): $(accpscw1_OBJECTS) $(accpscw1_DEPENDENCIES) $(EXTRA_accpscw1_DEPENDENCIES) 
	@rm -f accpscw1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(accpscw1_OBJECTS) $(accpscw1_LDADD) $(LIBS)
adlb_mimic1$(EXEEXT): $(adlb_mimic1_OBJECTS) $(adlb_mimic1_DEPENDENCIES) $(EXTRA_adlb_mimic1_DEPENDENCIES) 
	@rm -f adlb_mimic1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(adlb_mimic1_OBJECTS) $(adlb_mimic1_LDADD) $(LIBS)
allocmem$(EXEEXT): $(allocmem_OBJECTS) $(allocmem_DEPENDENCIES) $(EXTRA_allocmem_DEPENDENCIES) 
	@rm -f allocmem$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(allocmem_OBJECTS) $(allocmem_LDADD) $(LIBS)
attrorderwin$(EXEEXT): $(attrorderwin_OBJECTS) $(attrorderwin_DEPENDENCIES) $(EXTRA_attrorderwin_DEPENDENCIES) 
	@rm -f attrorderwin$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(attrorderwin_OBJECTS) $(attrorderwin_LDADD) $(LIBS)
baseattrwin$(EXEEXT): $(baseattrwin_OBJECTS) $(baseattrwin_DEPENDENCIES) $(EXTRA_baseattrwin_DEPENDENCIES) 
	@rm -f baseattrwin$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(baseattrwin_OBJECTS) $(baseattrwin_LDADD) $(LIBS)
compare_and_swap$(EXEEXT): $(compare_and_swap_OBJECTS) $(compare_and_swap_DEPENDENCIES) $(EXTRA_compare_and_swap_DEPENDENCIES) 
	@rm -f compare_and_swap$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(compare_and_swap_OBJECTS) $(compare_and_swap_LDADD) $(LIBS)
contention_put$(EXEEXT): $(contention_put_OBJECTS) $(contention_put_DEPENDENCIES) $(EXTRA_contention_put_DEPENDENCIES) 
	@rm -f contention_put$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(contention_put_OBJECTS) $(contention_put_LDADD) $(LIBS)
contention_putget$(EXEEXT): $(contention_putget_OBJECTS) $(contention_putget_DEPENDENCIES) $(EXTRA_contention_putget_DEPENDENCIES) 
	@rm -f contention_putget$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(contention_putget_OBJECTS) $(contention_putget_LDADD) $(LIBS)
contig_displ$(EXEEXT): $(contig_displ_OBJECTS) $(contig_displ_DEPENDENCIES) $(EXTRA_contig_displ_DEPENDENCIES) 
	@rm -f contig_displ$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(contig_displ_OBJECTS) $(contig_displ_LDADD) $(LIBS)
epochtest$(EXEEXT): $(epochtest_OBJECTS) $(epochtest_DEPENDENCIES) $(EXTRA_epochtest_DEPENDENCIES) 
	@rm -f epochtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(epochtest_OBJECTS) $(epochtest_LDADD) $(LIBS)
fetch_and_op_char$(EXEEXT): $(fetch_and_op_char_OBJECTS) $(fetch_and_op_char_DEPENDENCIES) $(EXTRA_fetch_and_op_char_DEPENDENCIES) 
	@rm -f fetch_and_op_char$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fetch_and_op_char_OBJECTS) $(fetch_and_op_char_LDADD) $(LIBS)
fetch_and_op_double$(EXEEXT): $(fetch_and_op_double_OBJECTS) $(fetch_and_op_double_DEPENDENCIES) $(EXTRA_fetch_and_op_double_DEPENDENCIES) 
	@rm -f fetch_and_op_double$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fetch_and_op_double_OBJECTS) $(fetch_and_op_double_LDADD) $(LIBS)
fetch_and_op_int$(EXEEXT): $(fetch_and_op_int_OBJECTS) $(fetch_and_op_int_DEPENDENCIES) $(EXTRA_fetch_and_op_int_DEPENDENCIES) 
	@rm -f fetch_and_op_int$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fetch_and_op_int_OBJECTS) $(fetch_and_op_int_LDADD) $(LIBS)
fetch_and_op_long$(EXEEXT): $(fetch_and_op_long_OBJECTS) $(fetch_and_op_long_DEPENDENCIES) $(EXTRA_fetch_and_op_long_DEPENDENCIES) 
	@rm -f fetch_and_op_long$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fetch_and_op_long_OBJECTS) $(fetch_and_op_long_LDADD) $(LIBS)
fetch_and_op_long_double$(EXEEXT): $(fetch_and_op_long_double_OBJECTS) $(fetch_and_op_long_double_DEPENDENCIES) $(EXTRA_fetch_and_op_long_double_DEPENDENCIES) 
	@rm -f fetch_and_op_long_double$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fetch_and_op_long_double_OBJECTS) $(fetch_and_op_long_double_LDADD) $(LIBS)
fetch_and_op_short$(EXEEXT): $(fetch_and_op_short_OBJECTS) $(fetch_and_op_short_DEPENDENCIES) $(EXTRA_fetch_and_op_short_DEPENDENCIES) 
	@rm -f fetch_and_op_short$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fetch_and_op_short_OBJECTS) $(fetch_and_op_short_LDADD) $(LIBS)
fetchandadd$(EXEEXT): $(fetchandadd_OBJECTS) $(fetchandadd_DEPENDENCIES) $(EXTRA_fetchandadd_DEPENDENCIES) 
	@rm -f fetchandadd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fetchandadd_OBJECTS) $(fetchandadd_LDADD) $(LIBS)
fetchandadd_am$(EXEEXT): $(fetchandadd_am_OBJECTS) $(fetchandadd_am_DEPENDENCIES) $(EXTRA_fetchandadd_am_DEPENDENCIES) 
	@rm -f fetchandadd_am$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fetchandadd_am_OBJECTS) $(fetchandadd_am_LDADD) $(LIBS)
fetchandadd_tree$(EXEEXT): $(fetchandadd_tree_OBJECTS) $(fetchandadd_tree_DEPENDENCIES) $(EXTRA_fetchandadd_tree_DEPENDENCIES) 
	@rm -f fetchandadd_tree$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fetchandadd_tree_OBJECTS) $(fetchandadd_tree_LDADD) $(LIBS)
fetchandadd_tree_am$(EXEEXT): $(fetchandadd_tree_am_OBJECTS) $(fetchandadd_tree_am_DEPENDENCIES) $(EXTRA_fetchandadd_tree_am_DEPENDENCIES) 
	@rm -f fetchandadd_tree_am$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fetchandadd_tree_am_OBJECTS) $(fetchandadd_tree_am_LDADD) $(LIBS)
fkeyvalwin$(EXEEXT): $(fkeyvalwin_OBJECTS) $(fkeyvalwin_DEPENDENCIES) $(EXTRA_fkeyvalwin_DEPENDENCIES) 
	@rm -f fkeyvalwin$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fkeyvalwin_OBJECTS) $(fkeyvalwin_LDADD) $(LIBS)
flush$(EXEEXT): $(flush_OBJECTS) $(flush_DEPENDENCIES) $(EXTRA_flush_DEPENDENCIES) 
	@rm -f flush$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(flush_OBJECTS) $(flush_LDADD) $(LIBS)
get_acc_local$(EXEEXT): $(get_acc_local_OBJECTS) $(get_acc_local_DEPENDENCIES) $(EXTRA_get_acc_local_DEPENDENCIES) 
	@rm -f get_acc_local$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(get_acc_local_OBJECTS) $(get_acc_local_LDADD) $(LIBS)
get_accumulate_double$(EXEEXT): $(get_accumulate_double_OBJECTS) $(get_accumulate_double_DEPENDENCIES) $(EXTRA_get_accumulate_double_DEPENDENCIES) 
	@rm -f get_accumulate_double$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(get_accumulate_double_OBJECTS) $(get_accumulate_double_LDADD) $(LIBS)
get_accumulate_double_derived$(EXEEXT): $(get_accumulate_double_derived_OBJECTS) $(get_accumulate_double_derived_DEPENDENCIES) $(EXTRA_get_accumulate_double_derived_DEPENDENCIES) 
	@rm -f get_accumulate_double_derived$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(get_accumulate_double_derived_OBJECTS) $(get_accumulate_double_derived_LDADD) $(LIBS)
get_accumulate_int$(EXEEXT): $(get_accumulate_int_OBJECTS) $(get_accumulate_int_DEPENDENCIES) $(EXTRA_get_accumulate_int_DEPENDENCIES) 
	@rm -f get_accumulate_int$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(get_accumulate_int_OBJECTS) $(get_accumulate_int_LDADD) $(LIBS)
get_accumulate_int_derived$(EXEEXT): $(get_accumulate_int_derived_OBJECTS) $(get_accumulate_int_derived_DEPENDENCIES) $(EXTRA_get_accumulate_int_derived_DEPENDENCIES) 
	@rm -f get_accumulate_int_derived$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(get_accumulate_int_derived_OBJECTS) $(get_accumulate_int_derived_LDADD) $(LIBS)
get_accumulate_long$(EXEEXT): $(get_accumulate_long_OBJECTS) $(get_accumulate_long_DEPENDENCIES) $(EXTRA_get_accumulate_long_DEPENDENCIES) 
	@rm -f get_accumulate_long$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(get_accumulate_long_OBJECTS) $(get_accumulate_long_LDADD) $(LIBS)
get_accumulate_long_derived$(EXEEXT): $(get_accumulate_long_derived_OBJECTS) $(get_accumulate_long_derived_DEPENDENCIES) $(EXTRA_get_accumulate_long_derived_DEPENDENCIES) 
	@rm -f get_accumulate_long_derived$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(get_accumulate_long_derived_OBJECTS) $(get_accumulate_long_derived_LDADD) $(LIBS)
get_accumulate_short$(EXEEXT): $(get_accumulate_short_OBJECTS) $(get_accumulate_short_DEPENDENCIES) $(EXTRA_get_accumulate_short_DEPENDENCIES) 
	@rm -f get_accumulate_short$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(get_accumulate_short_OBJECTS) $(get_accumulate_short_LDADD) $(LIBS)
get_accumulate_short_derived$(EXEEXT): $(get_accumulate_short_derived_OBJECTS) $(get_accumulate_short_derived_DEPENDENCIES) $(EXTRA_get_accumulate_short_derived_DEPENDENCIES) 
	@rm -f get_accumulate_short_derived$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(get_accumulate_short_derived_OBJECTS) $(get_accumulate_short_derived_LDADD) $(LIBS)
getfence1$(EXEEXT): $(getfence1_OBJECTS) $(getfence1_DEPENDENCIES) $(EXTRA_getfence1_DEPENDENCIES) 
	@rm -f getfence1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(getfence1_OBJECTS) $(getfence1_LDADD) $(LIBS)
getgroup$(EXEEXT): $(getgroup_OBJECTS) $(getgroup_DEPENDENCIES) $(EXTRA_getgroup_DEPENDENCIES) 
	@rm -f getgroup$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(getgroup_OBJECTS) $(getgroup_LDADD) $(LIBS)
ircpi$(EXEEXT): $(ircpi_OBJECTS) $(ircpi_DEPENDENCIES) $(EXTRA_ircpi_DEPENDENCIES) 
	@rm -f ircpi$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ircpi_OBJECTS) $(ircpi_LDADD) $(LIBS)
linked_list$(EXEEXT): $(linked_list_OBJECTS) $(linked_list_DEPENDENCIES) $(EXTRA_linked_list_DEPENDENCIES) 
	@rm -f linked_list$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(linked_list_OBJECTS) $(linked_list_LDADD) $(LIBS)
linked_list_fop$(EXEEXT): $(linked_list_fop_OBJECTS) $(linked_list_fop_DEPENDENCIES) $(EXTRA_linked_list_fop_DEPENDENCIES) 
	@rm -f linked_list_fop$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(linked_list_fop_OBJECTS) $(linked_list_fop_LDADD) $(LIBS)
linked_list_lockall$(EXEEXT): $(linked_list_lockall_OBJECTS) $(linked_list_lockall_DEPENDENCIES) $(EXTRA_linked_list_lockall_DEPENDENCIES) 
	@rm -f linked_list_lockall$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(linked_list_lockall_OBJECTS) $(linked_list_lockall_LDADD) $(LIBS)
lockcontention$(EXEEXT): $(lockcontention_OBJECTS) $(lockcontention_DEPENDENCIES) $(EXTRA_lockcontention_DEPENDENCIES) 
	@rm -f lockcontention$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lockcontention_OBJECTS) $(lockcontention_LDADD) $(LIBS)
lockcontention2$(EXEEXT): $(lockcontention2_OBJECTS) $(lockcontention2_DEPENDENCIES) $(EXTRA_lockcontention2_DEPENDENCIES) 
	@rm -f lockcontention2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lockcontention2_OBJECTS) $(lockcontention2_LDADD) $(LIBS)
lockcontention3$(EXEEXT): $(lockcontention3_OBJECTS) $(lockcontention3_DEPENDENCIES) $(EXTRA_lockcontention3_DEPENDENCIES) 
	@rm -f lockcontention3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lockcontention3_OBJECTS) $(lockcontention3_LDADD) $(LIBS)
locknull$(EXEEXT): $(locknull_OBJECTS) $(locknull_DEPENDENCIES) $(EXTRA_locknull_DEPENDENCIES) 
	@rm -f locknull$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(locknull_OBJECTS) $(locknull_LDADD) $(LIBS)
lockopts$(EXEEXT): $(lockopts_OBJECTS) $(lockopts_DEPENDENCIES) $(EXTRA_lockopts_DEPENDENCIES) 
	@rm -f lockopts$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lockopts_OBJECTS) $(lockopts_LDADD) $(LIBS)
manyrma2$(EXEEXT): $(manyrma2_OBJECTS) $(manyrma2_DEPENDENCIES) $(EXTRA_manyrma2_DEPENDENCIES) 
	@rm -f manyrma2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(manyrma2_OBJECTS) $(manyrma2_LDADD) $(LIBS)
mixedsync$(EXEEXT): $(mixedsync_OBJECTS) $(mixedsync_DEPENDENCIES) $(EXTRA_mixedsync_DEPENDENCIES) 
	@rm -f mixedsync$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mixedsync_OBJECTS) $(mixedsync_LDADD) $(LIBS)
nullpscw$(EXEEXT): $(nullpscw_OBJECTS) $(nullpscw_DEPENDENCIES) $(EXTRA_nullpscw_DEPENDENCIES) 
	@rm -f nullpscw$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(nullpscw_OBJECTS) $(nullpscw_LDADD) $(LIBS)
pscw_ordering$(EXEEXT): $(pscw_ordering_OBJECTS) $(pscw_ordering_DEPENDENCIES) $(EXTRA_pscw_ordering_DEPENDENCIES) 
	@rm -f pscw_ordering$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pscw_ordering_OBJECTS) $(pscw_ordering_LDADD) $(LIBS)
put_base$(EXEEXT): $(put_base_OBJECTS) $(put_base_DEPENDENCIES) $(EXTRA_put_base_DEPENDENCIES) 
	@rm -f put_base$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(put_base_OBJECTS) $(put_base_LDADD) $(LIBS)
put_bottom$(EXEEXT): $(put_bottom_OBJECTS) $(put_bottom_DEPENDENCIES) $(EXTRA_put_bottom_DEPENDENCIES) 
	@rm -f put_bottom$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(put_bottom_OBJECTS) $(put_bottom_LDADD) $(LIBS)
putfence1$(EXEEXT): $(putfence1_OBJECTS) $(putfence1_DEPENDENCIES) $(EXTRA_putfence1_DEPENDENCIES) 
	@rm -f putfence1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(putfence1_OBJECTS) $(putfence1_LDADD) $(LIBS)
putfidx$(EXEEXT): $(putfidx_OBJECTS) $(putfidx_DEPENDENCIES) $(EXTRA_putfidx_DEPENDENCIES) 
	@rm -f putfidx$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(putfidx_OBJECTS) $(putfidx_LDADD) $(LIBS)
putpscw1$(EXEEXT): $(putpscw1_OBJECTS) $(putpscw1_DEPENDENCIES) $(EXTRA_putpscw1_DEPENDENCIES) 
	@rm -f putpscw1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(putpscw1_OBJECTS) $(putpscw1_LDADD) $(LIBS)
req_example$(EXEEXT): $(req_example_OBJECTS) $(req_example_DEPENDENCIES) $(EXTRA_req_example_DEPENDENCIES) 
	@rm -f req_example$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(req_example_OBJECTS) $(req_example_LDADD) $(LIBS)
reqops$(EXEEXT): $(reqops_OBJECTS) $(reqops_DEPENDENCIES) $(EXTRA_reqops_DEPENDENCIES) 
	@rm -f reqops$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(reqops_OBJECTS) $(reqops_LDADD) $(LIBS)
rmanull$(EXEEXT): $(rmanull_OBJECTS) $(rmanull_DEPENDENCIES) $(EXTRA_rmanull_DEPENDENCIES) 
	@rm -f rmanull$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rmanull_OBJECTS) $(rmanull_LDADD) $(LIBS)
selfrma$(EXEEXT): $(selfrma_OBJECTS) $(selfrma_DEPENDENCIES) $(EXTRA_selfrma_DEPENDENCIES) 
	@rm -f selfrma$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(selfrma_OBJECTS) $(selfrma_LDADD) $(LIBS)
strided_acc_indexed$(EXEEXT): $(strided_acc_indexed_OBJECTS) $(strided_acc_indexed_DEPENDENCIES) $(EXTRA_strided_acc_indexed_DEPENDENCIES) 
	@rm -f strided_acc_indexed$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(strided_acc_indexed_OBJECTS) $(strided_acc_indexed_LDADD) $(LIBS)
strided_acc_onelock$(EXEEXT): $(strided_acc_onelock_OBJECTS) $(strided_acc_onelock_DEPENDENCIES) $(EXTRA_strided_acc_onelock_DEPENDENCIES) 
	@rm -f strided_acc_onelock$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(strided_acc_onelock_OBJECTS) $(strided_acc_onelock_LDADD) $(LIBS)
strided_acc_subarray$(EXEEXT): $(strided_acc_subarray_OBJECTS) $(strided_acc_subarray_DEPENDENCIES) $(EXTRA_strided_acc_subarray_DEPENDENCIES) 
	@rm -f strided_acc_subarray$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(strided_acc_subarray_OBJECTS) $(strided_acc_subarray_LDADD) $(LIBS)
strided_get_indexed$(EXEEXT): $(strided_get_indexed_OBJECTS) $(strided_get_indexed_DEPENDENCIES) $(EXTRA_strided_get_indexed_DEPENDENCIES) 
	@rm -f strided_get_indexed$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(strided_get_indexed_OBJECTS) $(strided_get_indexed_LDADD) $(LIBS)
strided_getacc_indexed$(EXEEXT): $(strided_getacc_indexed_OBJECTS) $(strided_getacc_indexed_DEPENDENCIES) $(EXTRA_strided_getacc_indexed_DEPENDENCIES) 
	@rm -f strided_getacc_indexed$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(strided_getacc_indexed_OBJECTS) $(strided_getacc_indexed_LDADD) $(LIBS)
strided_getacc_indexed_shared$(EXEEXT): $(strided_getacc_indexed_shared_OBJECTS) $(strided_getacc_indexed_shared_DEPENDENCIES) $(EXTRA_strided_getacc_indexed_shared_DEPENDENCIES) 
	@rm -f strided_getacc_indexed_shared$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(strided_getacc_indexed_shared_OBJECTS) $(strided_getacc_indexed_shared_LDADD) $(LIBS)
strided_putget_indexed$(EXEEXT): $(strided_putget_indexed_OBJECTS) $(strided_putget_indexed_DEPENDENCIES) $(EXTRA_strided_putget_indexed_DEPENDENCIES) 
	@rm -f strided_putget_indexed$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(strided_putget_indexed_OBJECTS) $(strided_putget_indexed_LDADD) $(LIBS)
strided_putget_indexed_shared$(EXEEXT): $(strided_putget_indexed_shared_OBJECTS) $(strided_putget_indexed_shared_DEPENDENCIES) $(EXTRA_strided_putget_indexed_shared_DEPENDENCIES) 
	@rm -f strided_putget_indexed_shared$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(strided_putget_indexed_shared_OBJECTS) $(strided_putget_indexed_shared_LDADD) $(LIBS)
test1$(EXEEXT): $(test1_OBJECTS) $(test1_DEPENDENCIES) $(EXTRA_test1_DEPENDENCIES) 
	@rm -f test1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test1_OBJECTS) $(test1_LDADD) $(LIBS)
test1_am$(EXEEXT): $(test1_am_OBJECTS) $(test1_am_DEPENDENCIES) $(EXTRA_test1_am_DEPENDENCIES) 
	@rm -f test1_am$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test1_am_OBJECTS) $(test1_am_LDADD) $(LIBS)
test1_dt$(EXEEXT): $(test1_dt_OBJECTS) $(test1_dt_DEPENDENCIES) $(EXTRA_test1_dt_DEPENDENCIES) 
	@rm -f test1_dt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test1_dt_OBJECTS) $(test1_dt_LDADD) $(LIBS)
test2$(EXEEXT): $(test2_OBJECTS) $(test2_DEPENDENCIES) $(EXTRA_test2_DEPENDENCIES) 
	@rm -f test2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test2_OBJECTS) $(test2_LDADD) $(LIBS)
test2_am$(EXEEXT): $(test2_am_OBJECTS) $(test2_am_DEPENDENCIES) $(EXTRA_test2_am_DEPENDENCIES) 
	@rm -f test2_am$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test2_am_OBJECTS) $(test2_am_LDADD) $(LIBS)
test3$(EXEEXT): $(test3_OBJECTS) $(test3_DEPENDENCIES) $(EXTRA_test3_DEPENDENCIES) 
	@rm -f test3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test3_OBJECTS) $(test3_LDADD) $(LIBS)
test3_am$(EXEEXT): $(test3_am_OBJECTS) $(test3_am_DEPENDENCIES) $(EXTRA_test3_am_DEPENDENCIES) 
	@rm -f test3_am$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test3_am_OBJECTS) $(test3_am_LDADD) $(LIBS)
test4$(EXEEXT): $(test4_OBJECTS) $(test4_DEPENDENCIES) $(EXTRA_test4_DEPENDENCIES) 
	@rm -f test4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test4_OBJECTS) $(test4_LDADD) $(LIBS)
test4_am$(EXEEXT): $(test4_am_OBJECTS) $(test4_am_DEPENDENCIES) $(EXTRA_test4_am_DEPENDENCIES) 
	@rm -f test4_am$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test4_am_OBJECTS) $(test4_am_LDADD) $(LIBS)
test5$(EXEEXT): $(test5_OBJECTS) $(test5_DEPENDENCIES) $(EXTRA_test5_DEPENDENCIES) 
	@rm -f test5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test5_OBJECTS) $(test5_LDADD) $(LIBS)
test5_am$(EXEEXT): $(test5_am_OBJECTS) $(test5_am_DEPENDENCIES) $(EXTRA_test5_am_DEPENDENCIES) 
	@rm -f test5_am$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test5_am_OBJECTS) $(test5_am_LDADD) $(LIBS)
transpose1$(EXEEXT): $(transpose1_OBJECTS) $(transpose1_DEPENDENCIES) $(EXTRA_transpose1_DEPENDENCIES) 
	@rm -f transpose1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(transpose1_OBJECTS) $(transpose1_LDADD) $(LIBS)
transpose2$(EXEEXT): $(transpose2_OBJECTS) $(transpose2_DEPENDENCIES) $(EXTRA_transpose2_DEPENDENCIES) 
	@rm -f transpose2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(transpose2_OBJECTS) $(transpose2_LDADD) $(LIBS)
transpose3$(EXEEXT): $(transpose3_OBJECTS) $(transpose3_DEPENDENCIES) $(EXTRA_transpose3_DEPENDENCIES) 
	@rm -f transpose3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(transpose3_OBJECTS) $(transpose3_LDADD) $(LIBS)
transpose4$(EXEEXT): $(transpose4_OBJECTS) $(transpose4_DEPENDENCIES) $(EXTRA_transpose4_DEPENDENCIES) 
	@rm -f transpose4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(transpose4_OBJECTS) $(transpose4_LDADD) $(LIBS)
transpose5$(EXEEXT): $(transpose5_OBJECTS) $(transpose5_DEPENDENCIES) $(EXTRA_transpose5_DEPENDENCIES) 
	@rm -f transpose5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(transpose5_OBJECTS) $(transpose5_LDADD) $(LIBS)
transpose6$(EXEEXT): $(transpose6_OBJECTS) $(transpose6_DEPENDENCIES) $(EXTRA_transpose6_DEPENDENCIES) 
	@rm -f transpose6$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(transpose6_OBJECTS) $(transpose6_LDADD) $(LIBS)
transpose7$(EXEEXT): $(transpose7_OBJECTS) $(transpose7_DEPENDENCIES) $(EXTRA_transpose7_DEPENDENCIES) 
	@rm -f transpose7$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(transpose7_OBJECTS) $(transpose7_LDADD) $(LIBS)
win_dynamic_acc$(EXEEXT): $(win_dynamic_acc_OBJECTS) $(win_dynamic_acc_DEPENDENCIES) $(EXTRA_win_dynamic_acc_DEPENDENCIES) 
	@rm -f win_dynamic_acc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(win_dynamic_acc_OBJECTS) $(win_dynamic_acc_LDADD) $(LIBS)
win_flavors$(EXEEXT): $(win_flavors_OBJECTS) $(win_flavors_DEPENDENCIES) $(EXTRA_win_flavors_DEPENDENCIES) 
	@rm -f win_flavors$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(win_flavors_OBJECTS) $(win_flavors_LDADD) $(LIBS)
win_info$(EXEEXT): $(win_info_OBJECTS) $(win_info_DEPENDENCIES) $(EXTRA_win_info_DEPENDENCIES) 
	@rm -f win_info$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(win_info_OBJECTS) $(win_info_LDADD) $(LIBS)
win_shared$(EXEEXT): $(win_shared_OBJECTS) $(win_shared_DEPENDENCIES) $(EXTRA_win_shared_DEPENDENCIES) 
	@rm -f win_shared$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(win_shared_OBJECTS) $(win_shared_LDADD) $(LIBS)
win_shared_noncontig$(EXEEXT): $(win_shared_noncontig_OBJECTS) $(win_shared_noncontig_DEPENDENCIES) $(EXTRA_win_shared_noncontig_DEPENDENCIES) 
	@rm -f win_shared_noncontig$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(win_shared_noncontig_OBJECTS) $(win_shared_noncontig_LDADD) $(LIBS)
win_shared_noncontig_put$(EXEEXT): $(win_shared_noncontig_put_OBJECTS) $(win_shared_noncontig_put_DEPENDENCIES) $(EXTRA_win_shared_noncontig_put_DEPENDENCIES) 
	@rm -f win_shared_noncontig_put$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(win_shared_noncontig_put_OBJECTS) $(win_shared_noncontig_put_LDADD) $(LIBS)
wincall$(EXEEXT): $(wincall_OBJECTS) $(wincall_DEPENDENCIES) $(EXTRA_wincall_DEPENDENCIES) 
	@rm -f wincall$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(wincall_OBJECTS) $(wincall_LDADD) $(LIBS)
window_creation$(EXEEXT): $(window_creation_OBJECTS) $(window_creation_DEPENDENCIES) $(EXTRA_window_creation_DEPENDENCIES) 
	@rm -f window_creation$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(window_creation_OBJECTS) $(window_creation_LDADD) $(LIBS)
winname$(EXEEXT): $(winname_OBJECTS) $(winname_DEPENDENCIES) $(EXTRA_winname_DEPENDENCIES) 
	@rm -f winname$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(winname_OBJECTS) $(winname_LDADD) $(LIBS)
wintest$(EXEEXT): $(wintest_OBJECTS) $(wintest_DEPENDENCIES) $(EXTRA_wintest_DEPENDENCIES) 
	@rm -f wintest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(wintest_OBJECTS) $(wintest_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/accfence1.Po
include ./$(DEPDIR)/accfence2.Po
include ./$(DEPDIR)/accfence2_am.Po
include ./$(DEPDIR)/accpscw1.Po
include ./$(DEPDIR)/adlb_mimic1.Po
include ./$(DEPDIR)/allocmem.Po
include ./$(DEPDIR)/attrorderwin.Po
include ./$(DEPDIR)/baseattrwin.Po
include ./$(DEPDIR)/compare_and_swap.Po
include ./$(DEPDIR)/contention_put.Po
include ./$(DEPDIR)/contention_putget.Po
include ./$(DEPDIR)/contig_displ.Po
include ./$(DEPDIR)/epochtest.Po
include ./$(DEPDIR)/fetch_and_op_char-fetch_and_op.Po
include ./$(DEPDIR)/fetch_and_op_double-fetch_and_op.Po
include ./$(DEPDIR)/fetch_and_op_int-fetch_and_op.Po
include ./$(DEPDIR)/fetch_and_op_long-fetch_and_op.Po
include ./$(DEPDIR)/fetch_and_op_long_double-fetch_and_op.Po
include ./$(DEPDIR)/fetch_and_op_short-fetch_and_op.Po
include ./$(DEPDIR)/fetchandadd.Po
include ./$(DEPDIR)/fetchandadd_am.Po
include ./$(DEPDIR)/fetchandadd_tree.Po
include ./$(DEPDIR)/fetchandadd_tree_am.Po
include ./$(DEPDIR)/fkeyvalwin.Po
include ./$(DEPDIR)/flush.Po
include ./$(DEPDIR)/get_acc_local.Po
include ./$(DEPDIR)/get_accumulate_double-get_accumulate.Po
include ./$(DEPDIR)/get_accumulate_double_derived-get_accumulate.Po
include ./$(DEPDIR)/get_accumulate_int-get_accumulate.Po
include ./$(DEPDIR)/get_accumulate_int_derived-get_accumulate.Po
include ./$(DEPDIR)/get_accumulate_long-get_accumulate.Po
include ./$(DEPDIR)/get_accumulate_long_derived-get_accumulate.Po
include ./$(DEPDIR)/get_accumulate_short-get_accumulate.Po
include ./$(DEPDIR)/get_accumulate_short_derived-get_accumulate.Po
include ./$(DEPDIR)/getfence1.Po
include ./$(DEPDIR)/getgroup.Po
include ./$(DEPDIR)/ircpi.Po
include ./$(DEPDIR)/linked_list.Po
include ./$(DEPDIR)/linked_list_fop.Po
include ./$(DEPDIR)/linked_list_lockall.Po
include ./$(DEPDIR)/lockcontention.Po
include ./$(DEPDIR)/lockcontention2.Po
include ./$(DEPDIR)/lockcontention3.Po
include ./$(DEPDIR)/locknull.Po
include ./$(DEPDIR)/lockopts.Po
include ./$(DEPDIR)/manyrma2.Po
include ./$(DEPDIR)/mixedsync.Po
include ./$(DEPDIR)/nullpscw.Po
include ./$(DEPDIR)/pscw_ordering.Po
include ./$(DEPDIR)/put_base.Po
include ./$(DEPDIR)/put_bottom.Po
include ./$(DEPDIR)/putfence1.Po
include ./$(DEPDIR)/putfidx.Po
include ./$(DEPDIR)/putpscw1.Po
include ./$(DEPDIR)/req_example.Po
include ./$(DEPDIR)/reqops.Po
include ./$(DEPDIR)/rmanull.Po
include ./$(DEPDIR)/selfrma.Po
include ./$(DEPDIR)/strided_acc_indexed.Po
include ./$(DEPDIR)/strided_acc_onelock.Po
include ./$(DEPDIR)/strided_acc_subarray.Po
include ./$(DEPDIR)/strided_get_indexed.Po
include ./$(DEPDIR)/strided_getacc_indexed.Po
include ./$(DEPDIR)/strided_getacc_indexed_shared.Po
include ./$(DEPDIR)/strided_putget_indexed.Po
include ./$(DEPDIR)/strided_putget_indexed_shared.Po
include ./$(DEPDIR)/test1.Po
include ./$(DEPDIR)/test1_am.Po
include ./$(DEPDIR)/test1_dt.Po
include ./$(DEPDIR)/test2.Po
include ./$(DEPDIR)/test2_am.Po
include ./$(DEPDIR)/test3.Po
include ./$(DEPDIR)/test3_am.Po
include ./$(DEPDIR)/test4.Po
include ./$(DEPDIR)/test4_am.Po
include ./$(DEPDIR)/test5.Po
include ./$(DEPDIR)/test5_am.Po
include ./$(DEPDIR)/transpose1.Po
include ./$(DEPDIR)/transpose2.Po
include ./$(DEPDIR)/transpose3.Po
include ./$(DEPDIR)/transpose4.Po
include ./$(DEPDIR)/transpose5.Po
include ./$(DEPDIR)/transpose6.Po
include ./$(DEPDIR)/transpose7.Po
include ./$(DEPDIR)/win_dynamic_acc.Po
include ./$(DEPDIR)/win_flavors.Po
include ./$(DEPDIR)/win_info.Po
include ./$(DEPDIR)/win_shared.Po
include ./$(DEPDIR)/win_shared_noncontig.Po
include ./$(DEPDIR)/win_shared_noncontig_put.Po
include ./$(DEPDIR)/wincall.Po
include ./$(DEPDIR)/window_creation.Po
include ./$(DEPDIR)/winname.Po
include ./$(DEPDIR)/wintest.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

fetch_and_op_char-fetch_and_op.o: fetch_and_op.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_char_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fetch_and_op_char-fetch_and_op.o -MD -MP -MF $(DEPDIR)/fetch_and_op_char-fetch_and_op.Tpo -c -o fetch_and_op_char-fetch_and_op.o `test -f 'fetch_and_op.c' || echo '$(srcdir)/'`fetch_and_op.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fetch_and_op_char-fetch_and_op.Tpo $(DEPDIR)/fetch_and_op_char-fetch_and_op.Po
#	$(AM_V_CC)source='fetch_and_op.c' object='fetch_and_op_char-fetch_and_op.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_char_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fetch_and_op_char-fetch_and_op.o `test -f 'fetch_and_op.c' || echo '$(srcdir)/'`fetch_and_op.c

fetch_and_op_char-fetch_and_op.obj: fetch_and_op.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_char_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fetch_and_op_char-fetch_and_op.obj -MD -MP -MF $(DEPDIR)/fetch_and_op_char-fetch_and_op.Tpo -c -o fetch_and_op_char-fetch_and_op.obj `if test -f 'fetch_and_op.c'; then $(CYGPATH_W) 'fetch_and_op.c'; else $(CYGPATH_W) '$(srcdir)/fetch_and_op.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fetch_and_op_char-fetch_and_op.Tpo $(DEPDIR)/fetch_and_op_char-fetch_and_op.Po
#	$(AM_V_CC)source='fetch_and_op.c' object='fetch_and_op_char-fetch_and_op.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_char_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fetch_and_op_char-fetch_and_op.obj `if test -f 'fetch_and_op.c'; then $(CYGPATH_W) 'fetch_and_op.c'; else $(CYGPATH_W) '$(srcdir)/fetch_and_op.c'; fi`

fetch_and_op_double-fetch_and_op.o: fetch_and_op.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_double_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fetch_and_op_double-fetch_and_op.o -MD -MP -MF $(DEPDIR)/fetch_and_op_double-fetch_and_op.Tpo -c -o fetch_and_op_double-fetch_and_op.o `test -f 'fetch_and_op.c' || echo '$(srcdir)/'`fetch_and_op.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fetch_and_op_double-fetch_and_op.Tpo $(DEPDIR)/fetch_and_op_double-fetch_and_op.Po
#	$(AM_V_CC)source='fetch_and_op.c' object='fetch_and_op_double-fetch_and_op.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_double_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fetch_and_op_double-fetch_and_op.o `test -f 'fetch_and_op.c' || echo '$(srcdir)/'`fetch_and_op.c

fetch_and_op_double-fetch_and_op.obj: fetch_and_op.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_double_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fetch_and_op_double-fetch_and_op.obj -MD -MP -MF $(DEPDIR)/fetch_and_op_double-fetch_and_op.Tpo -c -o fetch_and_op_double-fetch_and_op.obj `if test -f 'fetch_and_op.c'; then $(CYGPATH_W) 'fetch_and_op.c'; else $(CYGPATH_W) '$(srcdir)/fetch_and_op.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fetch_and_op_double-fetch_and_op.Tpo $(DEPDIR)/fetch_and_op_double-fetch_and_op.Po
#	$(AM_V_CC)source='fetch_and_op.c' object='fetch_and_op_double-fetch_and_op.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_double_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fetch_and_op_double-fetch_and_op.obj `if test -f 'fetch_and_op.c'; then $(CYGPATH_W) 'fetch_and_op.c'; else $(CYGPATH_W) '$(srcdir)/fetch_and_op.c'; fi`

fetch_and_op_int-fetch_and_op.o: fetch_and_op.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_int_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fetch_and_op_int-fetch_and_op.o -MD -MP -MF $(DEPDIR)/fetch_and_op_int-fetch_and_op.Tpo -c -o fetch_and_op_int-fetch_and_op.o `test -f 'fetch_and_op.c' || echo '$(srcdir)/'`fetch_and_op.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fetch_and_op_int-fetch_and_op.Tpo $(DEPDIR)/fetch_and_op_int-fetch_and_op.Po
#	$(AM_V_CC)source='fetch_and_op.c' object='fetch_and_op_int-fetch_and_op.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_int_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fetch_and_op_int-fetch_and_op.o `test -f 'fetch_and_op.c' || echo '$(srcdir)/'`fetch_and_op.c

fetch_and_op_int-fetch_and_op.obj: fetch_and_op.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_int_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fetch_and_op_int-fetch_and_op.obj -MD -MP -MF $(DEPDIR)/fetch_and_op_int-fetch_and_op.Tpo -c -o fetch_and_op_int-fetch_and_op.obj `if test -f 'fetch_and_op.c'; then $(CYGPATH_W) 'fetch_and_op.c'; else $(CYGPATH_W) '$(srcdir)/fetch_and_op.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fetch_and_op_int-fetch_and_op.Tpo $(DEPDIR)/fetch_and_op_int-fetch_and_op.Po
#	$(AM_V_CC)source='fetch_and_op.c' object='fetch_and_op_int-fetch_and_op.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_int_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fetch_and_op_int-fetch_and_op.obj `if test -f 'fetch_and_op.c'; then $(CYGPATH_W) 'fetch_and_op.c'; else $(CYGPATH_W) '$(srcdir)/fetch_and_op.c'; fi`

fetch_and_op_long-fetch_and_op.o: fetch_and_op.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_long_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fetch_and_op_long-fetch_and_op.o -MD -MP -MF $(DEPDIR)/fetch_and_op_long-fetch_and_op.Tpo -c -o fetch_and_op_long-fetch_and_op.o `test -f 'fetch_and_op.c' || echo '$(srcdir)/'`fetch_and_op.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fetch_and_op_long-fetch_and_op.Tpo $(DEPDIR)/fetch_and_op_long-fetch_and_op.Po
#	$(AM_V_CC)source='fetch_and_op.c' object='fetch_and_op_long-fetch_and_op.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_long_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fetch_and_op_long-fetch_and_op.o `test -f 'fetch_and_op.c' || echo '$(srcdir)/'`fetch_and_op.c

fetch_and_op_long-fetch_and_op.obj: fetch_and_op.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_long_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fetch_and_op_long-fetch_and_op.obj -MD -MP -MF $(DEPDIR)/fetch_and_op_long-fetch_and_op.Tpo -c -o fetch_and_op_long-fetch_and_op.obj `if test -f 'fetch_and_op.c'; then $(CYGPATH_W) 'fetch_and_op.c'; else $(CYGPATH_W) '$(srcdir)/fetch_and_op.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fetch_and_op_long-fetch_and_op.Tpo $(DEPDIR)/fetch_and_op_long-fetch_and_op.Po
#	$(AM_V_CC)source='fetch_and_op.c' object='fetch_and_op_long-fetch_and_op.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_long_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fetch_and_op_long-fetch_and_op.obj `if test -f 'fetch_and_op.c'; then $(CYGPATH_W) 'fetch_and_op.c'; else $(CYGPATH_W) '$(srcdir)/fetch_and_op.c'; fi`

fetch_and_op_long_double-fetch_and_op.o: fetch_and_op.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_long_double_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fetch_and_op_long_double-fetch_and_op.o -MD -MP -MF $(DEPDIR)/fetch_and_op_long_double-fetch_and_op.Tpo -c -o fetch_and_op_long_double-fetch_and_op.o `test -f 'fetch_and_op.c' || echo '$(srcdir)/'`fetch_and_op.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fetch_and_op_long_double-fetch_and_op.Tpo $(DEPDIR)/fetch_and_op_long_double-fetch_and_op.Po
#	$(AM_V_CC)source='fetch_and_op.c' object='fetch_and_op_long_double-fetch_and_op.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_long_double_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fetch_and_op_long_double-fetch_and_op.o `test -f 'fetch_and_op.c' || echo '$(srcdir)/'`fetch_and_op.c

fetch_and_op_long_double-fetch_and_op.obj: fetch_and_op.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_long_double_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fetch_and_op_long_double-fetch_and_op.obj -MD -MP -MF $(DEPDIR)/fetch_and_op_long_double-fetch_and_op.Tpo -c -o fetch_and_op_long_double-fetch_and_op.obj `if test -f 'fetch_and_op.c'; then $(CYGPATH_W) 'fetch_and_op.c'; else $(CYGPATH_W) '$(srcdir)/fetch_and_op.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fetch_and_op_long_double-fetch_and_op.Tpo $(DEPDIR)/fetch_and_op_long_double-fetch_and_op.Po
#	$(AM_V_CC)source='fetch_and_op.c' object='fetch_and_op_long_double-fetch_and_op.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_long_double_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fetch_and_op_long_double-fetch_and_op.obj `if test -f 'fetch_and_op.c'; then $(CYGPATH_W) 'fetch_and_op.c'; else $(CYGPATH_W) '$(srcdir)/fetch_and_op.c'; fi`

fetch_and_op_short-fetch_and_op.o: fetch_and_op.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_short_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fetch_and_op_short-fetch_and_op.o -MD -MP -MF $(DEPDIR)/fetch_and_op_short-fetch_and_op.Tpo -c -o fetch_and_op_short-fetch_and_op.o `test -f 'fetch_and_op.c' || echo '$(srcdir)/'`fetch_and_op.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fetch_and_op_short-fetch_and_op.Tpo $(DEPDIR)/fetch_and_op_short-fetch_and_op.Po
#	$(AM_V_CC)source='fetch_and_op.c' object='fetch_and_op_short-fetch_and_op.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_short_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fetch_and_op_short-fetch_and_op.o `test -f 'fetch_and_op.c' || echo '$(srcdir)/'`fetch_and_op.c

fetch_and_op_short-fetch_and_op.obj: fetch_and_op.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_short_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fetch_and_op_short-fetch_and_op.obj -MD -MP -MF $(DEPDIR)/fetch_and_op_short-fetch_and_op.Tpo -c -o fetch_and_op_short-fetch_and_op.obj `if test -f 'fetch_and_op.c'; then $(CYGPATH_W) 'fetch_and_op.c'; else $(CYGPATH_W) '$(srcdir)/fetch_and_op.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fetch_and_op_short-fetch_and_op.Tpo $(DEPDIR)/fetch_and_op_short-fetch_and_op.Po
#	$(AM_V_CC)source='fetch_and_op.c' object='fetch_and_op_short-fetch_and_op.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fetch_and_op_short_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fetch_and_op_short-fetch_and_op.obj `if test -f 'fetch_and_op.c'; then $(CYGPATH_W) 'fetch_and_op.c'; else $(CYGPATH_W) '$(srcdir)/fetch_and_op.c'; fi`

get_accumulate_double-get_accumulate.o: get_accumulate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_double_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_accumulate_double-get_accumulate.o -MD -MP -MF $(DEPDIR)/get_accumulate_double-get_accumulate.Tpo -c -o get_accumulate_double-get_accumulate.o `test -f 'get_accumulate.c' || echo '$(srcdir)/'`get_accumulate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/get_accumulate_double-get_accumulate.Tpo $(DEPDIR)/get_accumulate_double-get_accumulate.Po
#	$(AM_V_CC)source='get_accumulate.c' object='get_accumulate_double-get_accumulate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_double_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_accumulate_double-get_accumulate.o `test -f 'get_accumulate.c' || echo '$(srcdir)/'`get_accumulate.c

get_accumulate_double-get_accumulate.obj: get_accumulate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_double_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_accumulate_double-get_accumulate.obj -MD -MP -MF $(DEPDIR)/get_accumulate_double-get_accumulate.Tpo -c -o get_accumulate_double-get_accumulate.obj `if test -f 'get_accumulate.c'; then $(CYGPATH_W) 'get_accumulate.c'; else $(CYGPATH_W) '$(srcdir)/get_accumulate.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/get_accumulate_double-get_accumulate.Tpo $(DEPDIR)/get_accumulate_double-get_accumulate.Po
#	$(AM_V_CC)source='get_accumulate.c' object='get_accumulate_double-get_accumulate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_double_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_accumulate_double-get_accumulate.obj `if test -f 'get_accumulate.c'; then $(CYGPATH_W) 'get_accumulate.c'; else $(CYGPATH_W) '$(srcdir)/get_accumulate.c'; fi`

get_accumulate_double_derived-get_accumulate.o: get_accumulate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_double_derived_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_accumulate_double_derived-get_accumulate.o -MD -MP -MF $(DEPDIR)/get_accumulate_double_derived-get_accumulate.Tpo -c -o get_accumulate_double_derived-get_accumulate.o `test -f 'get_accumulate.c' || echo '$(srcdir)/'`get_accumulate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/get_accumulate_double_derived-get_accumulate.Tpo $(DEPDIR)/get_accumulate_double_derived-get_accumulate.Po
#	$(AM_V_CC)source='get_accumulate.c' object='get_accumulate_double_derived-get_accumulate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_double_derived_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_accumulate_double_derived-get_accumulate.o `test -f 'get_accumulate.c' || echo '$(srcdir)/'`get_accumulate.c

get_accumulate_double_derived-get_accumulate.obj: get_accumulate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_double_derived_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_accumulate_double_derived-get_accumulate.obj -MD -MP -MF $(DEPDIR)/get_accumulate_double_derived-get_accumulate.Tpo -c -o get_accumulate_double_derived-get_accumulate.obj `if test -f 'get_accumulate.c'; then $(CYGPATH_W) 'get_accumulate.c'; else $(CYGPATH_W) '$(srcdir)/get_accumulate.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/get_accumulate_double_derived-get_accumulate.Tpo $(DEPDIR)/get_accumulate_double_derived-get_accumulate.Po
#	$(AM_V_CC)source='get_accumulate.c' object='get_accumulate_double_derived-get_accumulate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_double_derived_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_accumulate_double_derived-get_accumulate.obj `if test -f 'get_accumulate.c'; then $(CYGPATH_W) 'get_accumulate.c'; else $(CYGPATH_W) '$(srcdir)/get_accumulate.c'; fi`

get_accumulate_int-get_accumulate.o: get_accumulate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_int_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_accumulate_int-get_accumulate.o -MD -MP -MF $(DEPDIR)/get_accumulate_int-get_accumulate.Tpo -c -o get_accumulate_int-get_accumulate.o `test -f 'get_accumulate.c' || echo '$(srcdir)/'`get_accumulate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/get_accumulate_int-get_accumulate.Tpo $(DEPDIR)/get_accumulate_int-get_accumulate.Po
#	$(AM_V_CC)source='get_accumulate.c' object='get_accumulate_int-get_accumulate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_int_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_accumulate_int-get_accumulate.o `test -f 'get_accumulate.c' || echo '$(srcdir)/'`get_accumulate.c

get_accumulate_int-get_accumulate.obj: get_accumulate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_int_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_accumulate_int-get_accumulate.obj -MD -MP -MF $(DEPDIR)/get_accumulate_int-get_accumulate.Tpo -c -o get_accumulate_int-get_accumulate.obj `if test -f 'get_accumulate.c'; then $(CYGPATH_W) 'get_accumulate.c'; else $(CYGPATH_W) '$(srcdir)/get_accumulate.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/get_accumulate_int-get_accumulate.Tpo $(DEPDIR)/get_accumulate_int-get_accumulate.Po
#	$(AM_V_CC)source='get_accumulate.c' object='get_accumulate_int-get_accumulate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_int_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_accumulate_int-get_accumulate.obj `if test -f 'get_accumulate.c'; then $(CYGPATH_W) 'get_accumulate.c'; else $(CYGPATH_W) '$(srcdir)/get_accumulate.c'; fi`

get_accumulate_int_derived-get_accumulate.o: get_accumulate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_int_derived_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_accumulate_int_derived-get_accumulate.o -MD -MP -MF $(DEPDIR)/get_accumulate_int_derived-get_accumulate.Tpo -c -o get_accumulate_int_derived-get_accumulate.o `test -f 'get_accumulate.c' || echo '$(srcdir)/'`get_accumulate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/get_accumulate_int_derived-get_accumulate.Tpo $(DEPDIR)/get_accumulate_int_derived-get_accumulate.Po
#	$(AM_V_CC)source='get_accumulate.c' object='get_accumulate_int_derived-get_accumulate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_int_derived_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_accumulate_int_derived-get_accumulate.o `test -f 'get_accumulate.c' || echo '$(srcdir)/'`get_accumulate.c

get_accumulate_int_derived-get_accumulate.obj: get_accumulate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_int_derived_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_accumulate_int_derived-get_accumulate.obj -MD -MP -MF $(DEPDIR)/get_accumulate_int_derived-get_accumulate.Tpo -c -o get_accumulate_int_derived-get_accumulate.obj `if test -f 'get_accumulate.c'; then $(CYGPATH_W) 'get_accumulate.c'; else $(CYGPATH_W) '$(srcdir)/get_accumulate.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/get_accumulate_int_derived-get_accumulate.Tpo $(DEPDIR)/get_accumulate_int_derived-get_accumulate.Po
#	$(AM_V_CC)source='get_accumulate.c' object='get_accumulate_int_derived-get_accumulate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_int_derived_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_accumulate_int_derived-get_accumulate.obj `if test -f 'get_accumulate.c'; then $(CYGPATH_W) 'get_accumulate.c'; else $(CYGPATH_W) '$(srcdir)/get_accumulate.c'; fi`

get_accumulate_long-get_accumulate.o: get_accumulate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_long_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_accumulate_long-get_accumulate.o -MD -MP -MF $(DEPDIR)/get_accumulate_long-get_accumulate.Tpo -c -o get_accumulate_long-get_accumulate.o `test -f 'get_accumulate.c' || echo '$(srcdir)/'`get_accumulate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/get_accumulate_long-get_accumulate.Tpo $(DEPDIR)/get_accumulate_long-get_accumulate.Po
#	$(AM_V_CC)source='get_accumulate.c' object='get_accumulate_long-get_accumulate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_long_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_accumulate_long-get_accumulate.o `test -f 'get_accumulate.c' || echo '$(srcdir)/'`get_accumulate.c

get_accumulate_long-get_accumulate.obj: get_accumulate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_long_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_accumulate_long-get_accumulate.obj -MD -MP -MF $(DEPDIR)/get_accumulate_long-get_accumulate.Tpo -c -o get_accumulate_long-get_accumulate.obj `if test -f 'get_accumulate.c'; then $(CYGPATH_W) 'get_accumulate.c'; else $(CYGPATH_W) '$(srcdir)/get_accumulate.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/get_accumulate_long-get_accumulate.Tpo $(DEPDIR)/get_accumulate_long-get_accumulate.Po
#	$(AM_V_CC)source='get_accumulate.c' object='get_accumulate_long-get_accumulate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_long_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_accumulate_long-get_accumulate.obj `if test -f 'get_accumulate.c'; then $(CYGPATH_W) 'get_accumulate.c'; else $(CYGPATH_W) '$(srcdir)/get_accumulate.c'; fi`

get_accumulate_long_derived-get_accumulate.o: get_accumulate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_long_derived_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_accumulate_long_derived-get_accumulate.o -MD -MP -MF $(DEPDIR)/get_accumulate_long_derived-get_accumulate.Tpo -c -o get_accumulate_long_derived-get_accumulate.o `test -f 'get_accumulate.c' || echo '$(srcdir)/'`get_accumulate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/get_accumulate_long_derived-get_accumulate.Tpo $(DEPDIR)/get_accumulate_long_derived-get_accumulate.Po
#	$(AM_V_CC)source='get_accumulate.c' object='get_accumulate_long_derived-get_accumulate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_long_derived_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_accumulate_long_derived-get_accumulate.o `test -f 'get_accumulate.c' || echo '$(srcdir)/'`get_accumulate.c

get_accumulate_long_derived-get_accumulate.obj: get_accumulate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_long_derived_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_accumulate_long_derived-get_accumulate.obj -MD -MP -MF $(DEPDIR)/get_accumulate_long_derived-get_accumulate.Tpo -c -o get_accumulate_long_derived-get_accumulate.obj `if test -f 'get_accumulate.c'; then $(CYGPATH_W) 'get_accumulate.c'; else $(CYGPATH_W) '$(srcdir)/get_accumulate.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/get_accumulate_long_derived-get_accumulate.Tpo $(DEPDIR)/get_accumulate_long_derived-get_accumulate.Po
#	$(AM_V_CC)source='get_accumulate.c' object='get_accumulate_long_derived-get_accumulate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_long_derived_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_accumulate_long_derived-get_accumulate.obj `if test -f 'get_accumulate.c'; then $(CYGPATH_W) 'get_accumulate.c'; else $(CYGPATH_W) '$(srcdir)/get_accumulate.c'; fi`

get_accumulate_short-get_accumulate.o: get_accumulate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_short_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_accumulate_short-get_accumulate.o -MD -MP -MF $(DEPDIR)/get_accumulate_short-get_accumulate.Tpo -c -o get_accumulate_short-get_accumulate.o `test -f 'get_accumulate.c' || echo '$(srcdir)/'`get_accumulate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/get_accumulate_short-get_accumulate.Tpo $(DEPDIR)/get_accumulate_short-get_accumulate.Po
#	$(AM_V_CC)source='get_accumulate.c' object='get_accumulate_short-get_accumulate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_short_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_accumulate_short-get_accumulate.o `test -f 'get_accumulate.c' || echo '$(srcdir)/'`get_accumulate.c

get_accumulate_short-get_accumulate.obj: get_accumulate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_short_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_accumulate_short-get_accumulate.obj -MD -MP -MF $(DEPDIR)/get_accumulate_short-get_accumulate.Tpo -c -o get_accumulate_short-get_accumulate.obj `if test -f 'get_accumulate.c'; then $(CYGPATH_W) 'get_accumulate.c'; else $(CYGPATH_W) '$(srcdir)/get_accumulate.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/get_accumulate_short-get_accumulate.Tpo $(DEPDIR)/get_accumulate_short-get_accumulate.Po
#	$(AM_V_CC)source='get_accumulate.c' object='get_accumulate_short-get_accumulate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_short_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_accumulate_short-get_accumulate.obj `if test -f 'get_accumulate.c'; then $(CYGPATH_W) 'get_accumulate.c'; else $(CYGPATH_W) '$(srcdir)/get_accumulate.c'; fi`

get_accumulate_short_derived-get_accumulate.o: get_accumulate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_short_derived_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_accumulate_short_derived-get_accumulate.o -MD -MP -MF $(DEPDIR)/get_accumulate_short_derived-get_accumulate.Tpo -c -o get_accumulate_short_derived-get_accumulate.o `test -f 'get_accumulate.c' || echo '$(srcdir)/'`get_accumulate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/get_accumulate_short_derived-get_accumulate.Tpo $(DEPDIR)/get_accumulate_short_derived-get_accumulate.Po
#	$(AM_V_CC)source='get_accumulate.c' object='get_accumulate_short_derived-get_accumulate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_short_derived_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_accumulate_short_derived-get_accumulate.o `test -f 'get_accumulate.c' || echo '$(srcdir)/'`get_accumulate.c

get_accumulate_short_derived-get_accumulate.obj: get_accumulate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_short_derived_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_accumulate_short_derived-get_accumulate.obj -MD -MP -MF $(DEPDIR)/get_accumulate_short_derived-get_accumulate.Tpo -c -o get_accumulate_short_derived-get_accumulate.obj `if test -f 'get_accumulate.c'; then $(CYGPATH_W) 'get_accumulate.c'; else $(CYGPATH_W) '$(srcdir)/get_accumulate.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/get_accumulate_short_derived-get_accumulate.Tpo $(DEPDIR)/get_accumulate_short_derived-get_accumulate.Po
#	$(AM_V_CC)source='get_accumulate.c' object='get_accumulate_short_derived-get_accumulate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(get_accumulate_short_derived_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_accumulate_short_derived-get_accumulate.obj `if test -f 'get_accumulate.c'; then $(CYGPATH_W) 'get_accumulate.c'; else $(CYGPATH_W) '$(srcdir)/get_accumulate.c'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist:  $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstPROGRAMS cscopelist ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am


$(top_builddir)/util/mtest.$(OBJEXT): $(top_srcdir)/util/mtest.c
	(cd $(top_builddir)/util && $(MAKE) mtest.$(OBJEXT))

testing:
	$(top_builddir)/runtests -srcdir=$(srcdir) -tests=testlist \
		-mpiexec=${MPIEXEC} -xmlfile=summary.xml

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
